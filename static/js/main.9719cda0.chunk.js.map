{"version":3,"sources":["ducks.js","store.js","selectors.js","App/DataViewPage/EventsTimeline.js","App/DataViewPage/DataViewPage.js","App/routes.js","App/DataEditorPage/DownloadButton.js","App/DataEditorPage/EditorTable.js","components/DateBox.js","components/constants.js","components/SelectBox.js","components/LazySelectSearch.js","components/WrappedComponents.js","App/DataEditorPage/validators.js","App/DataEditorPage/EventForm.js","App/DataEditorPage/routes.js","App/DataEditorPage/DataEditorPage.js","App/App.js","index.js"],"names":["loadEventsRequest","createAction","loadEventsSuccess","loadEventsFailure","editEvent","deleteEvent","addEvent","combineReducers","isFetching","handleActions","combineActions","error","state","data","eventTypes","payload","persons","toponyms","events","orderBy","map","event","startDate","Date","endDate","id","filter","uniqueId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","eventsSelector","toponymsSelector","personsSelector","eventTypesSelector","isFetchingSelector","errorSelector","MILLISECONDS_IN_DAY","TIMELINE_OPTIONS","align","minHeight","maxHeight","type","tooltip","followMouse","overflowMethod","snap","orientation","axis","zoomMin","EventsTimeline","useSelector","items","useMemo","slice","start","end","content","name","duration","group","title","item","toLocaleDateString","Math","floor","groups","eventType","length","options","DataViewPage","ghost","Content","style","display","alignItems","justifyContent","size","message","description","showIcon","viewDataPage","editorDataPage","DownloadButton","filename","JSON","stringify","download","href","URL","createObjectURL","Blob","DownloadOutlined","dateFormatter","date","toLocaleString","year","month","day","typeFormatter","personsFormatter","person","surname","patron","join","toponymsFormatter","toponym","startDateSorter","a","b","endDateSorter","EditorTable","onAdd","onSelect","deleteRow","useState","setFilter","eventsWithNestedData","find","personId","toponymId","it","toLowerCase","includes","onRow","useCallback","record","onClick","undefined","onSearch","debounce","value","flexDirection","padding","Search","placeholder","width","dataSource","rowKey","Column","dataIndex","sorter","render","filters","text","onFilter","_","onConfirm","stopPropagation","onCancel","okText","cancelText","DateBox","dateFormat","otherProps","format","ID_FACTORY","NAME_FACTORY","OPTIONS_DEFAULT_VALUE","SelectBox","optionKeyFactory","optionValueFactory","optionNameFactory","option","Option","DEFAULT_VALUE","LazySelectSearch","allOptions","onChange","count","filteredOptions","setFilteredOptions","inputValue","toLocaleLowerCase","onBlur","onChangeHandler","newValue","mappedValues","v","p","uniq","hidedOptionsCount","mode","filterOption","disabled","wrapIntoField","Component","label","validate","allowNull","identity","parse","input","onFocus","meta","invalid","touched","Item","validateStatus","help","wrapIntoDebouncedInput","debounceTimeout","onChangeFormProps","viewValue","setViewValue","onChangeDebounced","updatedValue","target","WrappedTextArea","Input","TextArea","WrappedDateBox","WrappedSelectBox","WrappedLazySelectSearch","required","isNil","isArray","dateMoreThanOrEqual","fieldName","fieldLabel","allValues","isBefore","composeValidators","validators","reduce","validator","typeNameFactory","patronNameFactory","INITIAL_EVENT_VALUE","EventForm","onSubmit","onClose","eventId","useParams","placement","visible","closable","destroyOnClose","Number","initialValues","moment","convertEventToFormFormat","values","handleSubmit","layout","onFinish","rows","isAfter","position","right","bottom","borderTop","background","textAlign","htmlType","addRoute","editRoute","DataEditorPage","dispatch","useDispatch","history","useHistory","push","generatePath","closeForm","changeEvent","toDate","success","onDelete","createEvent","showAddForm","extra","path","ROUTES","App","collapsed","setCollapsed","pathname","useLocation","selectedMenuKeys","route","useEffect","eventsData","hasSider","Sider","theme","collapsible","onCollapse","overflow","height","left","selectedKeys","to","PieChartOutlined","EditOutlined","marginLeft","transition","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9719cda0.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { combineActions, createAction, handleActions } from 'redux-actions';\nimport { orderBy, uniqueId } from 'lodash-es';\n\nconst loadEventsRequest = createAction('loadEventsRequest');\nconst loadEventsSuccess = createAction('loadEventsSuccess');\nconst loadEventsFailure = createAction('loadEventsFailure');\n\nexport const loadEvents = () => async (dispatch) => {\n  dispatch(loadEventsRequest());\n  try {\n    const eventsData = await import('./events.json');\n    dispatch(loadEventsSuccess(eventsData));\n  } catch (error) {\n    dispatch(loadEventsFailure(error));\n  }\n};\n\nexport const editEvent = createAction('editEvent');\nexport const deleteEvent = createAction('deleteEvent');\nexport const addEvent = createAction('addEvent');\n\nexport default combineReducers({\n  isFetching: handleActions(\n    {\n      [loadEventsRequest]: () => true,\n      [combineActions(loadEventsSuccess, loadEventsFailure)]: () => false,\n    },\n    false,\n  ),\n  error: handleActions(\n    {\n      [loadEventsRequest]: () => null,\n      [loadEventsFailure]: (state, data) => data,\n    },\n    null,\n  ),\n  eventTypes: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.eventTypes,\n    },\n    [],\n  ),\n  persons: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.persons,\n    },\n    [],\n  ),\n  toponyms: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.toponyms,\n    },\n    [],\n  ),\n  events: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) =>\n        orderBy(\n          data.payload.events.map((event) => ({\n            ...event,\n            startDate: new Date(event.startDate),\n            endDate: new Date(event.endDate),\n          })),\n          (event) => event.endDate - event.startDate,\n          'desc',\n        ),\n      [editEvent]: (state, data) =>\n        state.map((event) =>\n          event.id === data.payload.id ? data.payload : event,\n        ),\n      [deleteEvent]: (state, data) =>\n        state.filter((event) => event.id !== data.payload.id),\n      [addEvent]: (state, data) => [\n        ...state,\n        { ...data.payload, id: uniqueId() },\n      ],\n    },\n    [],\n  ),\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './ducks';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","export const eventsSelector = (state) => state.events;\nexport const toponymsSelector = (state) => state.toponyms;\nexport const personsSelector = (state) => state.persons;\nexport const eventTypesSelector = (state) => state.eventTypes;\nexport const isFetchingSelector = (state) => state.isFetching;\nexport const errorSelector = (state) => state.error;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport Timeline from 'react-visjs-timeline';\nimport { eventsSelector, eventTypesSelector } from 'selectors';\n\nconst MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\n\nconst TIMELINE_OPTIONS = {\n  align: 'center',\n  minHeight: '400px',\n  maxHeight: '400px',\n  type: 'range',\n  tooltip: {\n    followMouse: true,\n    overflowMethod: 'cap',\n  },\n  snap: null,\n  orientation: { axis: 'both' },\n  zoomMin: MILLISECONDS_IN_DAY * 5,\n};\n\nconst renderTitle = (item) => `\n  <div>\n    <h3 className=\"event-name\">${item.name}</h3>\n    <hr />\n    <div className=\"dates\">\n      <div>\n        ${item.startDate.toLocaleDateString()} - ${item.endDate.toLocaleDateString()}\n      </div>\n      <div>\n        <b>Продолжительность: </b>\n        ${Math.floor((item.endDate - item.startDate) / MILLISECONDS_IN_DAY)} дн.\n      </div>\n    </div>\n  </div>\n`;\n\nconst EventsTimeline = () => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n\n  const items = useMemo(\n    () =>\n      events.slice(0, 10).map((event) => ({\n        start: event.startDate,\n        end: event.endDate,\n        content: event.name,\n        duration: event.endDate - event.startDate,\n        group: event.type,\n        type:\n          event.endDate - event.startDate <= MILLISECONDS_IN_DAY\n            ? 'point'\n            : 'range',\n        title: renderTitle(event),\n      })),\n    [events],\n  );\n\n  const groups = useMemo(\n    () =>\n      eventTypes.map((eventType) => ({\n        id: eventType.id,\n        content: eventType.type,\n      })),\n    [eventTypes],\n  );\n\n  return (\n    <div>\n      {items && items.length > 0 && (\n        <Timeline options={TIMELINE_OPTIONS} items={items} groups={groups} />\n      )}\n    </div>\n  );\n};\n\nexport default EventsTimeline;\n","import { useSelector } from 'react-redux';\nimport { Alert, Layout, PageHeader, Spin } from 'antd';\nimport { errorSelector, isFetchingSelector } from 'selectors';\nimport EventsTimeline from './EventsTimeline';\n\nconst DataViewPage = () => {\n  const isFetching = useSelector(isFetchingSelector);\n  const error = useSelector(errorSelector);\n\n  return (\n    <Layout>\n      <PageHeader ghost={false} title=\"Просмотр данных\" />\n      <Layout.Content>\n        {isFetching && (\n          <div\n            style={{\n              minHeight: 200,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Spin size=\"large\" />\n          </div>\n        )}\n        {error && (\n          <Alert\n            message=\"Произошла ошибка\"\n            description={error}\n            type=\"error\"\n            showIcon\n          />\n        )}\n        {!isFetching && !error && <EventsTimeline />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataViewPage;\n","export const viewDataPage = '/view';\nexport const editorDataPage = '/editor';\n","import { useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\n\nconst DownloadButton = ({ filename = 'events.json' }) => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n\n  const content = JSON.stringify({\n    events,\n    eventTypes,\n    toponyms,\n    persons,\n  });\n\n  return (\n    <Button\n      download={filename}\n      href={URL.createObjectURL(\n        new Blob([content], { type: 'application/json' }),\n      )}\n    >\n      <DownloadOutlined />\n      Export to json\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","import { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { debounce } from 'lodash-es';\nimport { Button, Input, Popconfirm, Table } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\n\nconst dateFormatter = (date) =>\n  date.toLocaleString('ru', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\nconst typeFormatter = (type) => type.type;\nconst personsFormatter = (persons) =>\n  persons\n    .map((person) => `${person.surname} ${person.name} ${person.patron}`)\n    .join();\nconst toponymsFormatter = (toponyms) =>\n  toponyms.map((toponym) => toponym.name).join();\n\nconst startDateSorter = (a, b) => a.startDate - b.startDate;\n\nconst endDateSorter = (a, b) => a.endDate - b.endDate;\n\nconst EditorTable = ({ onAdd, onSelect, deleteRow }) => {\n  const [filter, setFilter] = useState('');\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const events = useSelector(eventsSelector);\n\n  const eventsWithNestedData = useMemo(\n    () =>\n      events\n        .map((event) => ({\n          ...event,\n          type: eventTypes.find((type) => type.id === event.type),\n          persons: event.persons\n            ? event.persons.map((personId) =>\n                persons.find((person) => person.id === personId),\n              )\n            : [],\n          toponyms: event.toponyms\n            ? event.toponyms.map((toponymId) =>\n                toponyms.find((toponym) => toponym.id === toponymId),\n              )\n            : [],\n        }))\n        .filter((it) => it.name.toLowerCase().includes(filter.toLowerCase())),\n    [events, eventTypes, persons, toponyms, filter],\n  );\n\n  const onRow = useCallback(\n    (record) => ({\n      onClick: onSelect ? () => onSelect(record) : undefined,\n    }),\n    [onSelect],\n  );\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onSearch = useCallback(\n    debounce((value) => setFilter(value)),\n    [],\n  );\n\n  const renderDeleteButton = (_, record) => (\n    <Popconfirm\n      title=\"Вы уверены?\"\n      onConfirm={(event) => {\n        event.stopPropagation();\n        deleteRow(record);\n      }}\n      onCancel={(event) => {\n        event.stopPropagation();\n      }}\n      okText=\"Да\"\n      cancelText=\"Нет\"\n    >\n      <Button\n        type=\"link\"\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n      >\n        Удалить\n      </Button>\n    </Popconfirm>\n  );\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '10px 20px',\n        }}\n      >\n        <Button type=\"primary\" onClick={onAdd}>\n          Добавить\n        </Button>\n        <Input.Search\n          placeholder=\"Введите значение для поиска\"\n          onSearch={onSearch}\n          style={{ width: 400 }}\n        />\n      </div>\n      <Table\n        dataSource={eventsWithNestedData}\n        rowKey={(event) => event.id}\n        onRow={onRow}\n      >\n        <Table.Column title=\"Название\" dataIndex=\"name\" width=\"35%\" />\n        <Table.Column\n          title=\"Дата начала\"\n          dataIndex=\"startDate\"\n          width=\"10%\"\n          sorter={startDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Дата окончания\"\n          dataIndex=\"endDate\"\n          width=\"10%\"\n          sorter={endDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Тип\"\n          dataIndex=\"type\"\n          width=\"10%\"\n          filters={eventTypes.map((eventType) => ({\n            value: eventType.id,\n            text: eventType.type,\n          }))}\n          onFilter={(value, record) => record.type.id === value}\n          render={typeFormatter}\n        />\n        <Table.Column\n          title=\"Действующие лица\"\n          dataIndex=\"persons\"\n          width=\"15%\"\n          render={personsFormatter}\n        />\n        <Table.Column\n          title=\"Топонимы\"\n          dataIndex=\"toponyms\"\n          width=\"15%\"\n          render={toponymsFormatter}\n        />\n        <Table.Column title=\"\" key=\"delete\" render={renderDeleteButton} />\n      </Table>\n    </div>\n  );\n};\n\nexport default EditorTable;\n","import { DatePicker } from 'antd';\n\nconst DEFAULT_DATE_FORMAT = 'DD.MM.YYYY';\n\nconst DateBox = ({ dateFormat = DEFAULT_DATE_FORMAT, ...otherProps }) => (\n  <DatePicker format={dateFormat} {...otherProps} />\n);\n\nexport default DateBox;\n","export const ID_FACTORY = (it) => it.id;\n\nexport const NAME_FACTORY = (it) => it.name;\n","import { Select } from 'antd';\nimport { ID_FACTORY, NAME_FACTORY } from './constants';\n\nconst OPTIONS_DEFAULT_VALUE = [];\n\nconst SelectBox = ({\n  options = OPTIONS_DEFAULT_VALUE,\n  optionKeyFactory = ID_FACTORY,\n  optionValueFactory = ID_FACTORY,\n  optionNameFactory = NAME_FACTORY,\n  ...otherProps\n}) => (\n  <Select {...otherProps}>\n    {options.map((option) => (\n      <Select.Option\n        key={optionKeyFactory(option)}\n        value={optionValueFactory(option)}\n      >\n        {optionNameFactory(option)}\n      </Select.Option>\n    ))}\n  </Select>\n);\nexport default SelectBox;\n","import { useCallback, useMemo, useState } from 'react';\nimport { debounce, uniq } from 'lodash-es';\nimport { Select } from 'antd';\nimport { ID_FACTORY, NAME_FACTORY } from './constants';\n\nconst DEFAULT_VALUE = [];\n\nconst LazySelectSearch = ({\n  allOptions,\n  value = DEFAULT_VALUE,\n  onChange,\n  placeholder,\n  count = 5,\n  optionKeyFactory = ID_FACTORY,\n  optionValueFactory = ID_FACTORY,\n  optionNameFactory = NAME_FACTORY,\n}) => {\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const onSearch = useCallback(\n    debounce((inputValue) => {\n      setFilteredOptions(\n        allOptions.filter((option) =>\n          optionNameFactory(option)\n            .toLowerCase()\n            .includes(inputValue.toLocaleLowerCase()),\n        ),\n      );\n    }, 300),\n    [allOptions],\n  );\n\n  const onBlur = useCallback(() => {\n    setFilteredOptions([]);\n  }, []);\n\n  const onChangeHandler = useCallback(\n    (newValue) => {\n      setFilteredOptions([]);\n      onChange(newValue);\n    },\n    [onChange],\n  );\n\n  const mappedValues = useMemo(\n    () => value.map((v) => allOptions.find((p) => optionValueFactory(p) === v)),\n    [allOptions, value, optionValueFactory],\n  );\n\n  const options = useMemo(\n    () =>\n      filteredOptions.length\n        ? filteredOptions.slice(0, count)\n        : uniq([...allOptions.slice(0, count), ...mappedValues]),\n    [allOptions, count, filteredOptions, mappedValues],\n  );\n  const hidedOptionsCount = useMemo(\n    () =>\n      filteredOptions.length\n        ? filteredOptions.length - count\n        : allOptions.length - options.length,\n    [allOptions, count, filteredOptions, options.length],\n  );\n\n  return (\n    <Select\n      placeholder={placeholder}\n      mode=\"multiple\"\n      filterOption={false}\n      onSearch={onSearch}\n      onChange={onChangeHandler}\n      onBlur={onBlur}\n      value={value}\n    >\n      {options.map((option) => (\n        <Select.Option\n          key={optionKeyFactory(option)}\n          value={optionValueFactory(option)}\n        >\n          {optionNameFactory(option)}\n        </Select.Option>\n      ))}\n      {hidedOptionsCount > 0 && (\n        <Select.Option\n          key=\"__hidedOptionsCount__\"\n          value=\"__hidedOptionsCount__\"\n          disabled\n        >\n          Еще {hidedOptionsCount} вариантов\n        </Select.Option>\n      )}\n    </Select>\n  );\n};\n\nexport default LazySelectSearch;\n","import { useCallback, useState } from 'react';\nimport { debounce, identity } from 'lodash-es';\nimport { Field } from 'react-final-form';\nimport { Form, Input } from 'antd';\nimport DateBox from './DateBox';\nimport SelectBox from './SelectBox';\nimport LazySelectSearch from './LazySelectSearch';\n\nconst wrapIntoField = (Component) => ({\n  name,\n  label,\n  validate,\n  allowNull = true,\n  format = identity,\n  parse = identity,\n  ...otherProps\n}) => (\n  <Field\n    name={name}\n    format={format}\n    parse={parse}\n    allowNull={allowNull}\n    validate={validate}\n  >\n    {({\n      input: { value, onChange, onBlur, onFocus },\n      meta: { invalid, touched, error },\n    }) => (\n      <Form.Item\n        label={label}\n        validateStatus={touched && invalid ? 'error' : 'success'}\n        help={touched && invalid ? error : undefined}\n      >\n        <Component\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          {...otherProps}\n        />\n      </Form.Item>\n    )}\n  </Field>\n);\n\nconst wrapIntoDebouncedInput = (Component) =>\n  function DebouncedInput({\n    debounceTimeout = 300,\n    onChange: onChangeFormProps,\n    value,\n    ...otherProps\n  }) {\n    const [viewValue, setViewValue] = useState(value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const onChangeDebounced = useCallback(\n      debounce((updatedValue) => {\n        onChangeFormProps(updatedValue);\n      }, debounceTimeout),\n      [],\n    );\n\n    const onChange = useCallback(\n      ({ target: { value: newValue } }) => {\n        setViewValue(newValue);\n        onChangeDebounced(newValue);\n      },\n      [onChangeDebounced],\n    );\n\n    return <Component value={viewValue} onChange={onChange} {...otherProps} />;\n  };\n\nconst WrappedInput = wrapIntoField(wrapIntoDebouncedInput(Input));\n\nconst WrappedTextArea = wrapIntoField(wrapIntoDebouncedInput(Input.TextArea));\n\nconst WrappedDateBox = wrapIntoField(DateBox);\n\nconst WrappedSelectBox = wrapIntoField(SelectBox);\n\nconst WrappedLazySelectSearch = wrapIntoField(LazySelectSearch);\n\nexport {\n  WrappedInput as Input,\n  WrappedTextArea as TextArea,\n  WrappedDateBox as DateBox,\n  WrappedSelectBox as SelectBox,\n  WrappedLazySelectSearch as LazySelectSearch,\n};\n","import { isArray, isNil } from 'lodash-es';\nimport {} from 'moment';\n\nexport const required = (value) =>\n  isNil(value) || value === '' || (isArray(value) && value.length === 0)\n    ? 'Поле обязательно'\n    : undefined;\n\nexport const dateLessThanOrEqual = (fieldName, fieldLabel) => (\n  value,\n  allValues,\n) =>\n  value.isAfter(allValues[fieldName], 'day')\n    ? `Значение поля должно быть меньше чем ${fieldLabel}`\n    : undefined;\n\nexport const dateMoreThanOrEqual = (fieldName, fieldLabel) => (\n  value,\n  allValues,\n) =>\n  value.isBefore(allValues[fieldName], 'day')\n    ? `Значение поля должно быть больше чем ${fieldLabel}`\n    : undefined;\n\nexport const moreThanOrEqual = (fieldName, fieldLabel) => (value, allValues) =>\n  value < allValues[fieldName]\n    ? `Значение поля должно быть больше чем ${fieldLabel}`\n    : undefined;\n\nexport const lessThanOrEqual = (fieldName, fieldLabel) => (value, allValues) =>\n  value > allValues[fieldName]\n    ? `Значение поля должно быть меньше чем ${fieldLabel}`\n    : undefined;\n\nexport const composeValidators = (...validators) => (value, allValues, meta) =>\n  validators.reduce(\n    (error, validator) => error || validator(value, allValues, meta),\n    undefined,\n  );\n","import { useSelector } from 'react-redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport { useParams } from 'react-router-dom';\nimport { Button, Drawer, Form, Spin } from 'antd';\nimport moment from 'moment';\nimport { DateBox, LazySelectSearch, SelectBox, TextArea } from 'components';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\nimport {\n  composeValidators,\n  dateLessThanOrEqual,\n  dateMoreThanOrEqual,\n  required,\n} from './validators';\n\nconst typeNameFactory = (it) => it.type;\n\nconst patronNameFactory = (it) => `${it.surname} ${it.name} ${it.patron}`;\n\nconst convertEventToFormFormat = (event) => ({\n  ...event,\n  startDate: moment(event.startDate),\n  endDate: moment(event.endDate),\n});\n\nconst INITIAL_EVENT_VALUE = {\n  name: null,\n  startDate: null,\n  endDate: null,\n  type: null,\n  toponyms: [],\n  persons: [],\n};\n\nconst EventForm = ({ onSubmit, onClose, title }) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const persons = useSelector(personsSelector);\n  const events = useSelector(eventsSelector);\n  const { id: eventId } = useParams();\n\n  if (events.length < 1) {\n    return (\n      <Drawer\n        title={title}\n        onClose={onClose}\n        placement=\"right\"\n        width={450}\n        visible\n        closable\n        destroyOnClose\n      >\n        <div\n          style={{\n            minHeight: 200,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Spin size=\"large\" />\n        </div>\n      </Drawer>\n    );\n  }\n\n  const event = events.find((it) => it.id === Number(eventId));\n\n  const initialValues = event\n    ? convertEventToFormFormat(event)\n    : INITIAL_EVENT_VALUE;\n\n  return (\n    <Drawer\n      title={title}\n      onClose={onClose}\n      placement=\"right\"\n      width={450}\n      visible\n      closable\n      destroyOnClose\n    >\n      <FinalForm\n        initialValues={initialValues}\n        onSubmit={(values) => {\n          onSubmit(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <Form layout=\"vertical\" onFinish={handleSubmit}>\n            <Form.Item>\n              <TextArea\n                name=\"name\"\n                label=\"Название\"\n                rows={4}\n                placeholder=\"Название\"\n                validate={required}\n              />\n            </Form.Item>\n            <Form.Item>\n              <DateBox\n                name=\"startDate\"\n                label=\"Дата начала\"\n                validate={composeValidators(\n                  required,\n                  dateLessThanOrEqual('endDate', 'Дата окончания'),\n                )}\n              />\n            </Form.Item>\n            <Form.Item>\n              <DateBox\n                name=\"endDate\"\n                label=\"Дата окончания\"\n                validate={composeValidators(\n                  required,\n                  dateMoreThanOrEqual('startDate', 'Дата начала'),\n                )}\n              />\n            </Form.Item>\n            <Form.Item>\n              <SelectBox\n                name=\"type\"\n                label=\"Тип\"\n                options={eventTypes}\n                optionNameFactory={typeNameFactory}\n                validate={required}\n              />\n            </Form.Item>\n            <Form.Item>\n              <LazySelectSearch\n                name=\"toponyms\"\n                label=\"Топонимы\"\n                allOptions={toponyms}\n                placeholder=\"Выберите топонимы\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <LazySelectSearch\n                name=\"persons\"\n                label=\"Действующие лица\"\n                allOptions={persons}\n                optionNameFactory={patronNameFactory}\n                placeholder=\"Выберите действующих лиц\"\n              />\n            </Form.Item>\n            <div\n              style={{\n                position: 'absolute',\n                right: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px',\n                background: '#fff',\n                textAlign: 'right',\n              }}\n            >\n              <Button htmlType=\"submit\" type=\"primary\">\n                Сохранить\n              </Button>\n            </div>\n          </Form>\n        )}\n      </FinalForm>\n    </Drawer>\n  );\n};\n\nexport default EventForm;\n","import { editorDataPage } from 'App/routes';\n\nexport const addRoute = `${editorDataPage}/add`;\n\nexport const editRoute = `${editorDataPage}/edit/:id`;\n","import { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { generatePath, Route, useHistory } from 'react-router-dom';\nimport { Layout, message, PageHeader } from 'antd';\nimport { uniqueId } from 'lodash-es';\nimport { addEvent, deleteEvent, editEvent } from 'ducks';\nimport { editorDataPage } from 'App/routes';\nimport DownloadButton from './DownloadButton';\nimport EditorTable from './EditorTable';\nimport EventForm from './EventForm';\nimport { addRoute, editRoute } from './routes';\n\nconst DataEditorPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSelect = useCallback(\n    (value) => {\n      history.push(generatePath(editRoute, { id: value.id }));\n    },\n    [history],\n  );\n\n  const closeForm = useCallback(() => {\n    history.push(editorDataPage);\n  }, [history]);\n\n  const changeEvent = useCallback(\n    (value) => {\n      dispatch(\n        editEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n      message.success('Событие успешно изменено');\n    },\n    [dispatch, closeForm],\n  );\n\n  const onDelete = useCallback(\n    (value) => {\n      dispatch(deleteEvent(value));\n    },\n    [dispatch],\n  );\n\n  const createEvent = useCallback(\n    (value) => {\n      dispatch(\n        addEvent({\n          ...value,\n          id: uniqueId(),\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n      message.success('Событие успешно добавлено');\n    },\n    [closeForm, dispatch],\n  );\n\n  const showAddForm = useCallback(() => {\n    history.push(addRoute);\n  }, [history]);\n\n  return (\n    <Layout>\n      <PageHeader\n        ghost={false}\n        title=\"Редактирование данных\"\n        extra={<DownloadButton />}\n      />\n      <Layout.Content>\n        <EditorTable\n          onAdd={showAddForm}\n          onSelect={onSelect}\n          deleteRow={onDelete}\n        />\n        <Route\n          path={addRoute}\n          render={() => (\n            <EventForm\n              onClose={closeForm}\n              onSubmit={createEvent}\n              title=\"Добавление события\"\n            />\n          )}\n        />\n        <Route\n          path={editRoute}\n          render={() => (\n            <EventForm\n              onClose={closeForm}\n              onSubmit={changeEvent}\n              title=\"Редактирование события\"\n            />\n          )}\n        />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataEditorPage;\n","import { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport { EditOutlined, PieChartOutlined } from '@ant-design/icons';\nimport { loadEvents } from '../ducks';\nimport DataViewPage from './DataViewPage';\nimport DataEditorPage from './DataEditorPage';\nimport { editorDataPage, viewDataPage } from './routes';\n\nconst ROUTES = [viewDataPage, editorDataPage];\n\nconst FULL_SIDER_WIDTH = 240;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const selectedMenuKeys = useMemo(\n    () => [ROUTES.find((route) => route === pathname)],\n    [pathname],\n  );\n\n  useEffect(() => {\n    dispatch(loadEvents());\n  }, [dispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }} hasSider>\n      <Layout.Sider\n        theme=\"dark\"\n        collapsible\n        width={FULL_SIDER_WIDTH}\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedMenuKeys}>\n          <Menu.Item key={viewDataPage}>\n            <Link to={viewDataPage}>\n              <PieChartOutlined />\n              <span>Просмотр данных</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={editorDataPage}>\n            <Link to={editorDataPage}>\n              <EditOutlined />\n              <span>Редактирование данных</span>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout\n        style={{\n          marginLeft: collapsed ? 80 : FULL_SIDER_WIDTH,\n          transition: 'margin 0.2s',\n        }}\n      >\n        <Layout.Content>\n          <Switch>\n            <Route path={viewDataPage} component={DataViewPage} />\n            <Route path={editorDataPage} component={DataEditorPage} />\n            <Redirect to={viewDataPage} />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App/App';\nimport './index.css';\n\nconst renderApp = () => (\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n);\n\nReactDOM.render(renderApp(), document.getElementById('root'));\n"],"sourceRoot":""}