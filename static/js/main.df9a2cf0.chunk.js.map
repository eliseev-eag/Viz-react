{"version":3,"sources":["ducks.js","store.js","selectors.js","App/DataViewPage/EventsTimeline.js","App/DataViewPage/DataViewPage.js","App/DataEditorPage/DownloadButton.js","App/DataEditorPage/EditorTable.js","components/DateBox.js","components/constants.js","components/SelectBox.js","components/LazySelectSearch.js","components/WrappedComponents.js","App/DataEditorPage/validators.js","App/DataEditorPage/EventForm.js","App/DataEditorPage/routes.js","App/routes.js","App/DataEditorPage/DataEditorPage.js","App/App.js","index.js"],"names":["loadEventsRequest","createAction","loadEventsSuccess","loadEventsFailure","editEvent","deleteEvent","addEvent","combineReducers","isFetching","handleActions","combineActions","error","state","data","eventTypes","payload","persons","toponyms","events","orderBy","map","event","startDate","Date","endDate","id","filter","uniqueId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","eventsSelector","toponymsSelector","personsSelector","eventTypesSelector","isFetchingSelector","errorSelector","TIMELINE_OPTIONS","align","minHeight","maxHeight","type","tooltip","followMouse","overflowMethod","snap","orientation","axis","zoomMin","MILLISECONDS_IN_DAY","EventsTimeline","useSelector","items","useMemo","slice","start","end","content","name","duration","group","title","item","toLocaleDateString","Math","floor","groups","eventType","length","options","DataViewPage","ghost","Content","style","display","alignItems","justifyContent","size","message","description","showIcon","DownloadButton","filename","JSON","stringify","download","href","URL","createObjectURL","Blob","DownloadOutlined","dateFormatter","date","toLocaleString","year","month","day","typeFormatter","personsFormatter","person","surname","patron","join","toponymsFormatter","toponym","startDateSorter","a","b","endDateSorter","EditorTable","onAdd","onSelect","deleteRow","useState","setFilter","eventsWithNestedData","find","personId","toponymId","it","toLowerCase","includes","onRow","useCallback","record","onClick","undefined","onSearch","debounce","value","flexDirection","padding","Search","placeholder","width","dataSource","rowKey","Column","dataIndex","sorter","render","filters","text","onFilter","key","_","onConfirm","stopPropagation","onCancel","okText","cancelText","DateBox","dateFormat","otherProps","format","ID_FACTORY","NAME_FACTORY","OPTIONS_DEFAULT_VALUE","SelectBox","optionKeyFactory","optionValueFactory","optionNameFactory","option","Option","DEFAULT_VALUE","LazySelectSearch","allOptions","onChange","count","filteredOptions","setFilteredOptions","inputValue","toLocaleLowerCase","onBlur","onChangeHandler","newValue","mappedValues","v","p","uniq","hidedOptionsCount","mode","filterOption","disabled","wrapIntoField","Component","label","validate","allowNull","identity","parse","input","onFocus","meta","invalid","touched","Item","validateStatus","help","wrapIntoDebouncedInput","debounceTimeout","onChangeFormProps","viewValue","setViewValue","onChangeDebounced","updatedValue","target","WrappedTextArea","Input","TextArea","WrappedDateBox","WrappedSelectBox","WrappedLazySelectSearch","required","isNil","isArray","dateMoreThanOrEqual","fieldName","fieldLabel","allValues","isBefore","composeValidators","validators","reduce","validator","typeNameFactory","patronNameFactory","INITIAL_EVENT_VALUE","EventForm","onSubmit","onClose","eventId","useParams","placement","visible","closable","destroyOnClose","Number","initialValues","moment","convertEventToFormFormat","values","handleSubmit","layout","onFinish","rows","isAfter","position","right","bottom","borderTop","background","textAlign","htmlType","addRoute","editRoute","DataEditorPage","dispatch","useDispatch","history","useHistory","push","generatePath","closeForm","changeEvent","toDate","success","onDelete","createEvent","showAddForm","extra","path","ROUTES","App","collapsed","setCollapsed","pathname","useLocation","selectedMenuKeys","route","useEffect","eventsData","hasSider","Sider","theme","collapsible","onCollapse","overflow","height","left","selectedKeys","to","PieChartOutlined","EditOutlined","marginLeft","transition","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.df9a2cf0.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { combineActions, createAction, handleActions } from 'redux-actions';\r\nimport { orderBy, uniqueId } from 'lodash-es';\r\n\r\nconst loadEventsRequest = createAction('loadEventsRequest');\r\nconst loadEventsSuccess = createAction('loadEventsSuccess');\r\nconst loadEventsFailure = createAction('loadEventsFailure');\r\n\r\nexport const loadEvents = () => async (dispatch) => {\r\n  dispatch(loadEventsRequest());\r\n  try {\r\n    const eventsData = await import('./events.json');\r\n    dispatch(loadEventsSuccess(eventsData));\r\n  } catch (error) {\r\n    dispatch(loadEventsFailure(error));\r\n  }\r\n};\r\n\r\nexport const editEvent = createAction('editEvent');\r\nexport const deleteEvent = createAction('deleteEvent');\r\nexport const addEvent = createAction('addEvent');\r\n\r\nexport default combineReducers({\r\n  isFetching: handleActions(\r\n    {\r\n      [loadEventsRequest]: () => true,\r\n      [combineActions(loadEventsSuccess, loadEventsFailure)]: () => false,\r\n    },\r\n    false,\r\n  ),\r\n  error: handleActions(\r\n    {\r\n      [loadEventsRequest]: () => null,\r\n      [loadEventsFailure]: (state, data) => data,\r\n    },\r\n    null,\r\n  ),\r\n  eventTypes: handleActions(\r\n    {\r\n      [loadEventsSuccess]: (state, data) => data.payload.eventTypes,\r\n    },\r\n    [],\r\n  ),\r\n  persons: handleActions(\r\n    {\r\n      [loadEventsSuccess]: (state, data) => data.payload.persons,\r\n    },\r\n    [],\r\n  ),\r\n  toponyms: handleActions(\r\n    {\r\n      [loadEventsSuccess]: (state, data) => data.payload.toponyms,\r\n    },\r\n    [],\r\n  ),\r\n  events: handleActions(\r\n    {\r\n      [loadEventsSuccess]: (state, data) =>\r\n        orderBy(\r\n          data.payload.events.map((event) => ({\r\n            ...event,\r\n            startDate: new Date(event.startDate),\r\n            endDate: new Date(event.endDate),\r\n          })),\r\n          (event) => event.endDate - event.startDate,\r\n          'desc',\r\n        ),\r\n      [editEvent]: (state, data) =>\r\n        state.map((event) =>\r\n          event.id === data.payload.id ? data.payload : event,\r\n        ),\r\n      [deleteEvent]: (state, data) =>\r\n        state.filter((event) => event.id !== data.payload.id),\r\n      [addEvent]: (state, data) => [\r\n        ...state,\r\n        { ...data.payload, id: uniqueId() },\r\n      ],\r\n    },\r\n    [],\r\n  ),\r\n});\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './ducks';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk)),\r\n);\r\n\r\nexport default store;\r\n","export const eventsSelector = (state) => state.events;\r\nexport const toponymsSelector = (state) => state.toponyms;\r\nexport const personsSelector = (state) => state.persons;\r\nexport const eventTypesSelector = (state) => state.eventTypes;\r\nexport const isFetchingSelector = (state) => state.isFetching;\r\nexport const errorSelector = (state) => state.error;\r\n","import React, { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Timeline from 'react-visjs-timeline';\r\nimport { eventsSelector, eventTypesSelector } from 'selectors';\r\n\r\nconst MILLISECONDS_IN_DAY = 1000 * 60 * 60 * 24;\r\n\r\nconst TIMELINE_OPTIONS = {\r\n  align: 'center',\r\n  minHeight: '400px',\r\n  maxHeight: '400px',\r\n  type: 'range',\r\n  tooltip: {\r\n    followMouse: true,\r\n    overflowMethod: 'cap',\r\n  },\r\n  snap: null,\r\n  orientation: { axis: 'both' },\r\n  zoomMin: MILLISECONDS_IN_DAY * 5,\r\n};\r\n\r\nconst renderTitle = (item) => `\r\n  <div>\r\n    <h3 className=\"event-name\">${item.name}</h3>\r\n    <hr />\r\n    <div className=\"dates\">\r\n      <div>\r\n        ${item.startDate.toLocaleDateString()} - ${item.endDate.toLocaleDateString()}\r\n      </div>\r\n      <div>\r\n        <b>Продолжительность: </b>\r\n        ${Math.floor((item.endDate - item.startDate) / MILLISECONDS_IN_DAY)} дн.\r\n      </div>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nconst EventsTimeline = () => {\r\n  const events = useSelector(eventsSelector);\r\n  const eventTypes = useSelector(eventTypesSelector);\r\n\r\n  const items = useMemo(\r\n    () =>\r\n      events.slice(0, 10).map((event) => ({\r\n        start: event.startDate,\r\n        end: event.endDate,\r\n        content: event.name,\r\n        duration: event.endDate - event.startDate,\r\n        group: event.type,\r\n        type:\r\n          event.endDate - event.startDate <= MILLISECONDS_IN_DAY\r\n            ? 'point'\r\n            : 'range',\r\n        title: renderTitle(event),\r\n      })),\r\n    [events],\r\n  );\r\n\r\n  const groups = useMemo(\r\n    () =>\r\n      eventTypes.map((eventType) => ({\r\n        id: eventType.id,\r\n        content: eventType.type,\r\n      })),\r\n    [eventTypes],\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {items && items.length > 0 && (\r\n        <Timeline options={TIMELINE_OPTIONS} items={items} groups={groups} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventsTimeline;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Alert, Layout, PageHeader, Spin } from 'antd';\r\nimport { errorSelector, isFetchingSelector } from 'selectors';\r\nimport EventsTimeline from './EventsTimeline';\r\n\r\nconst DataViewPage = () => {\r\n  const isFetching = useSelector(isFetchingSelector);\r\n  const error = useSelector(errorSelector);\r\n\r\n  return (\r\n    <Layout>\r\n      <PageHeader ghost={false} title=\"Просмотр данных\" />\r\n      <Layout.Content>\r\n        {isFetching && (\r\n          <div\r\n            style={{\r\n              minHeight: 200,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            <Spin size=\"large\" />\r\n          </div>\r\n        )}\r\n        {error && (\r\n          <Alert\r\n            message=\"Произошла ошибка\"\r\n            description={error}\r\n            type=\"error\"\r\n            showIcon\r\n          />\r\n        )}\r\n        {!isFetching && !error && <EventsTimeline />}\r\n      </Layout.Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DataViewPage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from 'antd';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport {\r\n  eventsSelector,\r\n  eventTypesSelector,\r\n  personsSelector,\r\n  toponymsSelector,\r\n} from 'selectors';\r\n\r\nconst DownloadButton = ({ filename = 'events.json' }) => {\r\n  const events = useSelector(eventsSelector);\r\n  const eventTypes = useSelector(eventTypesSelector);\r\n  const persons = useSelector(personsSelector);\r\n  const toponyms = useSelector(toponymsSelector);\r\n\r\n  const content = JSON.stringify({\r\n    events,\r\n    eventTypes,\r\n    toponyms,\r\n    persons,\r\n  });\r\n\r\n  return (\r\n    <Button\r\n      download={filename}\r\n      href={URL.createObjectURL(\r\n        new Blob([content], { type: 'application/json' }),\r\n      )}\r\n    >\r\n      <DownloadOutlined />\r\n      Export to json\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DownloadButton;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { debounce } from 'lodash-es';\r\nimport { Button, Input, Popconfirm, Table } from 'antd';\r\nimport {\r\n  eventsSelector,\r\n  eventTypesSelector,\r\n  personsSelector,\r\n  toponymsSelector,\r\n} from 'selectors';\r\n\r\nconst dateFormatter = (date) =>\r\n  date.toLocaleString('ru', {\r\n    year: 'numeric',\r\n    month: 'numeric',\r\n    day: 'numeric',\r\n  });\r\nconst typeFormatter = (type) => type.type;\r\nconst personsFormatter = (persons) =>\r\n  persons\r\n    .map((person) => `${person.surname} ${person.name} ${person.patron}`)\r\n    .join();\r\nconst toponymsFormatter = (toponyms) =>\r\n  toponyms.map((toponym) => toponym.name).join();\r\n\r\nconst startDateSorter = (a, b) => a.startDate - b.startDate;\r\n\r\nconst endDateSorter = (a, b) => a.endDate - b.endDate;\r\n\r\nconst EditorTable = ({ onAdd, onSelect, deleteRow }) => {\r\n  const [filter, setFilter] = useState('');\r\n  const eventTypes = useSelector(eventTypesSelector);\r\n  const persons = useSelector(personsSelector);\r\n  const toponyms = useSelector(toponymsSelector);\r\n  const events = useSelector(eventsSelector);\r\n\r\n  const eventsWithNestedData = useMemo(\r\n    () =>\r\n      events\r\n        .map((event) => ({\r\n          ...event,\r\n          type: eventTypes.find((type) => type.id === event.type),\r\n          persons: event.persons\r\n            ? event.persons.map((personId) =>\r\n                persons.find((person) => person.id === personId),\r\n              )\r\n            : [],\r\n          toponyms: event.toponyms\r\n            ? event.toponyms.map((toponymId) =>\r\n                toponyms.find((toponym) => toponym.id === toponymId),\r\n              )\r\n            : [],\r\n        }))\r\n        .filter((it) => it.name.toLowerCase().includes(filter.toLowerCase())),\r\n    [events, eventTypes, persons, toponyms, filter],\r\n  );\r\n\r\n  const onRow = useCallback(\r\n    (record) => ({\r\n      onClick: onSelect ? () => onSelect(record) : undefined,\r\n    }),\r\n    [onSelect],\r\n  );\r\n\r\n  const onSearch = useCallback(\r\n    debounce((value) => setFilter(value)),\r\n    [],\r\n  );\r\n\r\n  const renderDeleteButton = (_, record) => (\r\n    <Popconfirm\r\n      title=\"Вы уверены?\"\r\n      onConfirm={(event) => {\r\n        event.stopPropagation();\r\n        deleteRow(record);\r\n      }}\r\n      onCancel={(event) => {\r\n        event.stopPropagation();\r\n      }}\r\n      okText=\"Да\"\r\n      cancelText=\"Нет\"\r\n    >\r\n      <Button\r\n        type=\"link\"\r\n        onClick={(event) => {\r\n          event.stopPropagation();\r\n        }}\r\n      >\r\n        Удалить\r\n      </Button>\r\n    </Popconfirm>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          justifyContent: 'space-between',\r\n          alignItems: 'center',\r\n          padding: '10px 20px',\r\n        }}\r\n      >\r\n        <Button type=\"primary\" onClick={onAdd}>\r\n          Добавить\r\n        </Button>\r\n        <Input.Search\r\n          placeholder=\"Введите значение для поиска\"\r\n          onSearch={onSearch}\r\n          style={{ width: 400 }}\r\n        />\r\n      </div>\r\n      <Table\r\n        dataSource={eventsWithNestedData}\r\n        rowKey={(event) => event.id}\r\n        onRow={onRow}\r\n      >\r\n        <Table.Column title=\"Название\" dataIndex=\"name\" width=\"35%\" />\r\n        <Table.Column\r\n          title=\"Дата начала\"\r\n          dataIndex=\"startDate\"\r\n          width=\"10%\"\r\n          sorter={startDateSorter}\r\n          render={dateFormatter}\r\n        />\r\n        <Table.Column\r\n          title=\"Дата окончания\"\r\n          dataIndex=\"endDate\"\r\n          width=\"10%\"\r\n          sorter={endDateSorter}\r\n          render={dateFormatter}\r\n        />\r\n        <Table.Column\r\n          title=\"Тип\"\r\n          dataIndex=\"type\"\r\n          width=\"10%\"\r\n          filters={eventTypes.map((eventType) => ({\r\n            value: eventType.id,\r\n            text: eventType.type,\r\n          }))}\r\n          onFilter={(value, record) => record.type.id === value}\r\n          render={typeFormatter}\r\n        />\r\n        <Table.Column\r\n          title=\"Действующие лица\"\r\n          dataIndex=\"persons\"\r\n          width=\"15%\"\r\n          render={personsFormatter}\r\n        />\r\n        <Table.Column\r\n          title=\"Топонимы\"\r\n          dataIndex=\"toponyms\"\r\n          width=\"15%\"\r\n          render={toponymsFormatter}\r\n        />\r\n        <Table.Column title=\"\" key=\"delete\" render={renderDeleteButton} />\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorTable;\r\n","import React from 'react';\r\nimport { DatePicker } from 'antd';\r\n\r\nconst DEFAULT_DATE_FORMAT = 'DD.MM.YYYY';\r\n\r\nconst DateBox = ({ dateFormat = DEFAULT_DATE_FORMAT, ...otherProps }) => (\r\n  <DatePicker format={dateFormat} {...otherProps} />\r\n);\r\n\r\nexport default DateBox;\r\n","export const ID_FACTORY = (it) => it.id;\r\n\r\nexport const NAME_FACTORY = (it) => it.name;\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\nimport { ID_FACTORY, NAME_FACTORY } from './constants';\r\n\r\nconst OPTIONS_DEFAULT_VALUE = [];\r\n\r\nconst SelectBox = ({\r\n  options = OPTIONS_DEFAULT_VALUE,\r\n  optionKeyFactory = ID_FACTORY,\r\n  optionValueFactory = ID_FACTORY,\r\n  optionNameFactory = NAME_FACTORY,\r\n  ...otherProps\r\n}) => (\r\n  <Select {...otherProps}>\r\n    {options.map((option) => (\r\n      <Select.Option\r\n        key={optionKeyFactory(option)}\r\n        value={optionValueFactory(option)}\r\n      >\r\n        {optionNameFactory(option)}\r\n      </Select.Option>\r\n    ))}\r\n  </Select>\r\n);\r\nexport default SelectBox;\r\n","import React, { useCallback, useMemo, useState } from 'react';\r\nimport { debounce, uniq } from 'lodash-es';\r\nimport { Select } from 'antd';\r\nimport { ID_FACTORY, NAME_FACTORY } from './constants';\r\n\r\nconst DEFAULT_VALUE = [];\r\n\r\nconst LazySelectSearch = ({\r\n  allOptions,\r\n  value = DEFAULT_VALUE,\r\n  onChange,\r\n  placeholder,\r\n  count = 5,\r\n  optionKeyFactory = ID_FACTORY,\r\n  optionValueFactory = ID_FACTORY,\r\n  optionNameFactory = NAME_FACTORY,\r\n}) => {\r\n  const [filteredOptions, setFilteredOptions] = useState([]);\r\n  const onSearch = useCallback(\r\n    debounce((inputValue) => {\r\n      setFilteredOptions(\r\n        allOptions.filter((option) =>\r\n          optionNameFactory(option)\r\n            .toLowerCase()\r\n            .includes(inputValue.toLocaleLowerCase()),\r\n        ),\r\n      );\r\n    }, 300),\r\n    [allOptions],\r\n  );\r\n\r\n  const onBlur = useCallback(() => {\r\n    setFilteredOptions([]);\r\n  }, []);\r\n\r\n  const onChangeHandler = useCallback(\r\n    (newValue) => {\r\n      setFilteredOptions([]);\r\n      onChange(newValue);\r\n    },\r\n    [onChange],\r\n  );\r\n\r\n  const mappedValues = useMemo(\r\n    () => value.map((v) => allOptions.find((p) => optionValueFactory(p) === v)),\r\n    [allOptions, value, optionValueFactory],\r\n  );\r\n\r\n  const options = useMemo(\r\n    () =>\r\n      filteredOptions.length\r\n        ? filteredOptions.slice(0, count)\r\n        : uniq([...allOptions.slice(0, count), ...mappedValues]),\r\n    [allOptions, count, filteredOptions, mappedValues],\r\n  );\r\n  const hidedOptionsCount = useMemo(\r\n    () =>\r\n      filteredOptions.length\r\n        ? filteredOptions.length - count\r\n        : allOptions.length - options.length,\r\n    [allOptions, count, filteredOptions, options.length],\r\n  );\r\n\r\n  return (\r\n    <Select\r\n      placeholder={placeholder}\r\n      mode=\"multiple\"\r\n      filterOption={false}\r\n      onSearch={onSearch}\r\n      onChange={onChangeHandler}\r\n      onBlur={onBlur}\r\n      value={value}\r\n    >\r\n      {options.map((option) => (\r\n        <Select.Option\r\n          key={optionKeyFactory(option)}\r\n          value={optionValueFactory(option)}\r\n        >\r\n          {optionNameFactory(option)}\r\n        </Select.Option>\r\n      ))}\r\n      {hidedOptionsCount > 0 && (\r\n        <Select.Option\r\n          key=\"__hidedOptionsCount__\"\r\n          value=\"__hidedOptionsCount__\"\r\n          disabled\r\n        >\r\n          Еще {hidedOptionsCount} вариантов\r\n        </Select.Option>\r\n      )}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default LazySelectSearch;\r\n","import React, { useCallback, useState } from 'react';\r\nimport { debounce, identity } from 'lodash-es';\r\nimport { Field } from 'react-final-form';\r\nimport { Form, Input } from 'antd';\r\nimport DateBox from './DateBox';\r\nimport SelectBox from './SelectBox';\r\nimport LazySelectSearch from './LazySelectSearch';\r\n\r\nconst wrapIntoField = (Component) => ({\r\n  name,\r\n  label,\r\n  validate,\r\n  allowNull = true,\r\n  format = identity,\r\n  parse = identity,\r\n  ...otherProps\r\n}) => (\r\n  <Field\r\n    name={name}\r\n    format={format}\r\n    parse={parse}\r\n    allowNull={allowNull}\r\n    validate={validate}\r\n  >\r\n    {({\r\n      input: { value, onChange, onBlur, onFocus },\r\n      meta: { invalid, touched, error },\r\n    }) => (\r\n      <Form.Item\r\n        label={label}\r\n        validateStatus={touched && invalid ? 'error' : 'success'}\r\n        help={touched && invalid ? error : undefined}\r\n      >\r\n        <Component\r\n          value={value}\r\n          onChange={onChange}\r\n          onBlur={onBlur}\r\n          onFocus={onFocus}\r\n          {...otherProps}\r\n        />\r\n      </Form.Item>\r\n    )}\r\n  </Field>\r\n);\r\n\r\nconst wrapIntoDebouncedInput = (Component) =>\r\n  function DebouncedInput({\r\n    debounceTimeout = 300,\r\n    onChange: onChangeFormProps,\r\n    value,\r\n    ...otherProps\r\n  }) {\r\n    const [viewValue, setViewValue] = useState(value);\r\n    const onChangeDebounced = useCallback(\r\n      debounce((updatedValue) => {\r\n        onChangeFormProps(updatedValue);\r\n      }, debounceTimeout),\r\n      [],\r\n    );\r\n\r\n    const onChange = useCallback(\r\n      ({ target: { value: newValue } }) => {\r\n        setViewValue(newValue);\r\n        onChangeDebounced(newValue);\r\n      },\r\n      [onChangeDebounced],\r\n    );\r\n\r\n    return <Component value={viewValue} onChange={onChange} {...otherProps} />;\r\n  };\r\n\r\nconst WrappedInput = wrapIntoField(wrapIntoDebouncedInput(Input));\r\n\r\nconst WrappedTextArea = wrapIntoField(wrapIntoDebouncedInput(Input.TextArea));\r\n\r\nconst WrappedDateBox = wrapIntoField(DateBox);\r\n\r\nconst WrappedSelectBox = wrapIntoField(SelectBox);\r\n\r\nconst WrappedLazySelectSearch = wrapIntoField(LazySelectSearch);\r\n\r\nexport {\r\n  WrappedInput as Input,\r\n  WrappedTextArea as TextArea,\r\n  WrappedDateBox as DateBox,\r\n  WrappedSelectBox as SelectBox,\r\n  WrappedLazySelectSearch as LazySelectSearch,\r\n};\r\n","import { isArray, isNil } from 'lodash-es';\r\nimport {} from 'moment';\r\n\r\nexport const required = (value) =>\r\n  isNil(value) || value === '' || (isArray(value) && value.length === 0)\r\n    ? 'Поле обязательно'\r\n    : undefined;\r\n\r\nexport const dateLessThanOrEqual = (fieldName, fieldLabel) => (\r\n  value,\r\n  allValues,\r\n) =>\r\n  value.isAfter(allValues[fieldName], 'day')\r\n    ? `Значение поля должно быть меньше чем ${fieldLabel}`\r\n    : undefined;\r\n\r\nexport const dateMoreThanOrEqual = (fieldName, fieldLabel) => (\r\n  value,\r\n  allValues,\r\n) =>\r\n  value.isBefore(allValues[fieldName], 'day')\r\n    ? `Значение поля должно быть больше чем ${fieldLabel}`\r\n    : undefined;\r\n\r\nexport const moreThanOrEqual = (fieldName, fieldLabel) => (value, allValues) =>\r\n  value < allValues[fieldName]\r\n    ? `Значение поля должно быть больше чем ${fieldLabel}`\r\n    : undefined;\r\n\r\nexport const lessThanOrEqual = (fieldName, fieldLabel) => (value, allValues) =>\r\n  value > allValues[fieldName]\r\n    ? `Значение поля должно быть меньше чем ${fieldLabel}`\r\n    : undefined;\r\n\r\nexport const composeValidators = (...validators) => (value, allValues, meta) =>\r\n  validators.reduce(\r\n    (error, validator) => error || validator(value, allValues, meta),\r\n    undefined,\r\n  );\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Form as FinalForm } from 'react-final-form';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Button, Drawer, Form, Spin } from 'antd';\r\nimport moment from 'moment';\r\nimport { DateBox, LazySelectSearch, SelectBox, TextArea } from 'components';\r\nimport {\r\n  eventsSelector,\r\n  eventTypesSelector,\r\n  personsSelector,\r\n  toponymsSelector,\r\n} from 'selectors';\r\nimport {\r\n  composeValidators,\r\n  dateLessThanOrEqual,\r\n  dateMoreThanOrEqual,\r\n  required,\r\n} from './validators';\r\n\r\nconst typeNameFactory = (it) => it.type;\r\n\r\nconst patronNameFactory = (it) => `${it.surname} ${it.name} ${it.patron}`;\r\n\r\nconst convertEventToFormFormat = (event) => ({\r\n  ...event,\r\n  startDate: moment(event.startDate),\r\n  endDate: moment(event.endDate),\r\n});\r\n\r\nconst INITIAL_EVENT_VALUE = {\r\n  name: null,\r\n  startDate: null,\r\n  endDate: null,\r\n  type: null,\r\n  toponyms: [],\r\n  persons: [],\r\n};\r\n\r\nconst EventForm = ({ onSubmit, onClose, title }) => {\r\n  const eventTypes = useSelector(eventTypesSelector);\r\n  const toponyms = useSelector(toponymsSelector);\r\n  const persons = useSelector(personsSelector);\r\n  const events = useSelector(eventsSelector);\r\n  const { id: eventId } = useParams();\r\n\r\n  if (events.length < 1) {\r\n    return (\r\n      <Drawer\r\n        title={title}\r\n        onClose={onClose}\r\n        placement=\"right\"\r\n        width={450}\r\n        visible\r\n        closable\r\n        destroyOnClose\r\n      >\r\n        <div\r\n          style={{\r\n            minHeight: 200,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <Spin size=\"large\" />\r\n        </div>\r\n      </Drawer>\r\n    );\r\n  }\r\n\r\n  const event = events.find((it) => it.id === Number(eventId));\r\n\r\n  const initialValues = event\r\n    ? convertEventToFormFormat(event)\r\n    : INITIAL_EVENT_VALUE;\r\n\r\n  return (\r\n    <Drawer\r\n      title={title}\r\n      onClose={onClose}\r\n      placement=\"right\"\r\n      width={450}\r\n      visible\r\n      closable\r\n      destroyOnClose\r\n    >\r\n      <FinalForm\r\n        initialValues={initialValues}\r\n        onSubmit={(values) => {\r\n          onSubmit(values);\r\n        }}\r\n      >\r\n        {({ handleSubmit }) => (\r\n          <Form layout=\"vertical\" onFinish={handleSubmit}>\r\n            <Form.Item>\r\n              <TextArea\r\n                name=\"name\"\r\n                label=\"Название\"\r\n                rows={4}\r\n                placeholder=\"Название\"\r\n                validate={required}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <DateBox\r\n                name=\"startDate\"\r\n                label=\"Дата начала\"\r\n                validate={composeValidators(\r\n                  required,\r\n                  dateLessThanOrEqual('endDate', 'Дата окончания'),\r\n                )}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <DateBox\r\n                name=\"endDate\"\r\n                label=\"Дата окончания\"\r\n                validate={composeValidators(\r\n                  required,\r\n                  dateMoreThanOrEqual('startDate', 'Дата начала'),\r\n                )}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <SelectBox\r\n                name=\"type\"\r\n                label=\"Тип\"\r\n                options={eventTypes}\r\n                optionNameFactory={typeNameFactory}\r\n                validate={required}\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <LazySelectSearch\r\n                name=\"toponyms\"\r\n                label=\"Топонимы\"\r\n                allOptions={toponyms}\r\n                placeholder=\"Выберите топонимы\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <LazySelectSearch\r\n                name=\"persons\"\r\n                label=\"Действующие лица\"\r\n                allOptions={persons}\r\n                optionNameFactory={patronNameFactory}\r\n                placeholder=\"Выберите действующих лиц\"\r\n              />\r\n            </Form.Item>\r\n            <div\r\n              style={{\r\n                position: 'absolute',\r\n                right: 0,\r\n                bottom: 0,\r\n                width: '100%',\r\n                borderTop: '1px solid #e9e9e9',\r\n                padding: '10px 16px',\r\n                background: '#fff',\r\n                textAlign: 'right',\r\n              }}\r\n            >\r\n              <Button htmlType=\"submit\" type=\"primary\">\r\n                Сохранить\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </FinalForm>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default EventForm;\r\n","import { editorDataPage } from 'App/routes';\r\n\r\nexport const addRoute = `${editorDataPage}/add`;\r\n\r\nexport const editRoute = `${editorDataPage}/edit/:id`;\r\n","export const viewDataPage = '/view';\r\nexport const editorDataPage = '/editor';\r\n","import React, { useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { generatePath, Route, useHistory } from 'react-router-dom';\r\nimport { Layout, message, PageHeader } from 'antd';\r\nimport { uniqueId } from 'lodash-es';\r\nimport { addEvent, deleteEvent, editEvent } from 'ducks';\r\nimport { editorDataPage } from 'App/routes';\r\nimport DownloadButton from './DownloadButton';\r\nimport EditorTable from './EditorTable';\r\nimport EventForm from './EventForm';\r\nimport { addRoute, editRoute } from './routes';\r\n\r\nconst DataEditorPage = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const onSelect = useCallback(\r\n    (value) => {\r\n      history.push(generatePath(editRoute, { id: value.id }));\r\n    },\r\n    [history],\r\n  );\r\n\r\n  const closeForm = useCallback(() => {\r\n    history.push(editorDataPage);\r\n  }, [history]);\r\n\r\n  const changeEvent = useCallback(\r\n    (value) => {\r\n      dispatch(\r\n        editEvent({\r\n          ...value,\r\n          endDate: value.endDate.toDate(),\r\n          startDate: value.startDate.toDate(),\r\n        }),\r\n      );\r\n      closeForm();\r\n      message.success('Событие успешно изменено');\r\n    },\r\n    [dispatch, closeForm],\r\n  );\r\n\r\n  const onDelete = useCallback(\r\n    (value) => {\r\n      dispatch(deleteEvent(value));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  const createEvent = useCallback(\r\n    (value) => {\r\n      dispatch(\r\n        addEvent({\r\n          ...value,\r\n          id: uniqueId(),\r\n          endDate: value.endDate.toDate(),\r\n          startDate: value.startDate.toDate(),\r\n        }),\r\n      );\r\n      closeForm();\r\n      message.success('Событие успешно добавлено');\r\n    },\r\n    [closeForm, dispatch],\r\n  );\r\n\r\n  const showAddForm = useCallback(() => {\r\n    history.push(addRoute);\r\n  }, [history]);\r\n\r\n  return (\r\n    <Layout>\r\n      <PageHeader\r\n        ghost={false}\r\n        title=\"Редактирование данных\"\r\n        extra={<DownloadButton />}\r\n      />\r\n      <Layout.Content>\r\n        <EditorTable\r\n          onAdd={showAddForm}\r\n          onSelect={onSelect}\r\n          deleteRow={onDelete}\r\n        />\r\n        <Route\r\n          path={addRoute}\r\n          render={() => (\r\n            <EventForm\r\n              onClose={closeForm}\r\n              onSubmit={createEvent}\r\n              title=\"Добавление события\"\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={editRoute}\r\n          render={() => (\r\n            <EventForm\r\n              onClose={closeForm}\r\n              onSubmit={changeEvent}\r\n              title=\"Редактирование события\"\r\n            />\r\n          )}\r\n        />\r\n      </Layout.Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default DataEditorPage;\r\n","import React, { useEffect, useMemo, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\r\nimport { Layout, Menu } from 'antd';\r\nimport { EditOutlined, PieChartOutlined } from '@ant-design/icons';\r\nimport { loadEvents } from '../ducks';\r\nimport DataViewPage from './DataViewPage';\r\nimport DataEditorPage from './DataEditorPage';\r\nimport { editorDataPage, viewDataPage } from './routes';\r\n\r\nconst ROUTES = [viewDataPage, editorDataPage];\r\n\r\nconst FULL_SIDER_WIDTH = 240;\r\n\r\nconst App = () => {\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const { pathname } = useLocation();\r\n\r\n  const selectedMenuKeys = useMemo(\r\n    () => [ROUTES.find((route) => route === pathname)],\r\n    [pathname],\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(loadEvents());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Layout style={{ minHeight: '100vh' }} hasSider>\r\n      <Layout.Sider\r\n        theme=\"dark\"\r\n        collapsible\r\n        width={FULL_SIDER_WIDTH}\r\n        collapsed={collapsed}\r\n        onCollapse={setCollapsed}\r\n        style={{\r\n          overflow: 'auto',\r\n          height: '100vh',\r\n          position: 'fixed',\r\n          left: 0,\r\n        }}\r\n      >\r\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedMenuKeys}>\r\n          <Menu.Item key={viewDataPage}>\r\n            <Link to={viewDataPage}>\r\n              <PieChartOutlined />\r\n              <span>Просмотр данных</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={editorDataPage}>\r\n            <Link to={editorDataPage}>\r\n              <EditOutlined />\r\n              <span>Редактирование данных</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Layout.Sider>\r\n      <Layout\r\n        style={{\r\n          marginLeft: collapsed ? 80 : FULL_SIDER_WIDTH,\r\n          transition: 'margin 0.2s',\r\n        }}\r\n      >\r\n        <Layout.Content>\r\n          <Switch>\r\n            <Route path={viewDataPage} component={DataViewPage} />\r\n            <Route path={editorDataPage} component={DataEditorPage} />\r\n            <Redirect to={viewDataPage} />\r\n          </Switch>\r\n        </Layout.Content>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport store from './store';\r\nimport App from './App/App';\r\nimport './index.css';\r\n\r\nconst renderApp = () => (\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>\r\n);\r\n\r\nReactDOM.render(renderApp(), document.getElementById('root'));\r\n"],"sourceRoot":""}