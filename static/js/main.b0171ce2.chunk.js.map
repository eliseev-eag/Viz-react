{"version":3,"sources":["ducks.js","store.js","selectors.js","App/DataViewPage/EventsTimeline.js","App/DataViewPage/DataViewPage.js","App/DataEditorPage/DownloadButton.js","App/DataEditorPage/EditorTable.js","components/LazySelectSearch.js","App/DataEditorPage/EventForm.js","App/DataEditorPage/DataEditorPage.js","App/App.js","App/routes.js","index.js"],"names":["loadEventsRequest","createAction","loadEventsSuccess","loadEventsFailure","changeTimelineRange","editEvent","deleteEvent","timelineDefaultState","start","Date","end","reducer","combineReducers","requestWorking","handleActions","combineActions","eventTypes","state","data","payload","persons","toponyms","events","orderBy","map","event","startDate","endDate","id","filter","errorOccured","timeline","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","eventsSelector","toponymsSelector","personsSelector","eventTypesSelector","TIMELINE_OPTIONS","align","minHeight","maxHeight","type","tooltip","followMouse","overflowMethod","snap","orientation","axis","zoomMin","eventTypesToGroupSelector","flow","eventType","content","eventsToTimelineItemsSelector","slice","name","duration","group","EventsTimeline","dispatch","useDispatch","items","useSelector","groups","onRangeChangedHandler","useCallback","length","options","rangechangedHandler","DataViewPage","ghost","title","Content","DownloadButton","filename","JSON","stringify","download","href","URL","createObjectURL","Blob","dateFormatter","date","toLocaleString","year","month","day","typeFormatter","personsFormatter","person","surname","patron","join","toponymsFormatter","toponym","startDateSorter","a","b","endDateSorter","EditorTable","onSelect","deleteRow","eventsWithNestedData","useMemo","find","personId","toponymId","onRow","record","onClick","undefined","dataSource","rowKey","Column","dataIndex","width","sorter","render","filters","value","text","onFilter","key","_","onConfirm","stopPropagation","onCancel","okText","cancelText","idSelector","option","DEFAULT_NAME_SELECTOR","LazySelectSearch","forwardRef","ref","allOptions","onChange","placeholder","count","keySelector","valueSelector","nameSelector","useState","filteredOptions","setFilteredOptions","onSearch","debounce","inputValue","toLowerCase","includes","toLocaleLowerCase","onBlur","onChangeHandler","newValue","mappedValues","v","p","uniq","hidedOptionsCount","mode","filterOption","Option","disabled","rules","required","message","WrappedEventForm","Form","create","onSubmit","form","getFieldDecorator","setFieldsValue","validateFields","visible","onClose","useEffect","pick","Object","keys","placement","closable","layout","Item","label","format","style","position","right","bottom","borderTop","padding","background","textAlign","e","preventDefault","err","values","DataEditorPage","setEvent","moment","closeForm","onSave","toDate","onDelete","extra","ROUTES","App","collapsed","setCollapsed","pathname","useLocation","selectedMenuKeys","route","eventsData","hasSider","Sider","theme","collapsible","onCollapse","overflow","height","left","selectedKeys","to","marginLeft","transition","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b0171ce2.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createAction, handleActions, combineActions } from 'redux-actions';\nimport { orderBy } from 'lodash-es';\n\nconst loadEventsRequest = createAction('loadEventsRequest');\nconst loadEventsSuccess = createAction('loadEventsSuccess');\nconst loadEventsFailure = createAction('loadEventsFailure');\n\nexport const changeTimelineRange = createAction('changeTimelineRange');\n\nexport const loadEvents = () => async dispatch => {\n  dispatch(loadEventsRequest());\n  try {\n    const eventsData = await import('./events.json');\n    dispatch(loadEventsSuccess(eventsData));\n  } catch (error) {\n    dispatch(loadEventsFailure(error));\n  }\n};\n\nexport const editEvent = createAction('editEvent');\nexport const deleteEvent = createAction('deleteEvent');\n\nconst timelineDefaultState = {\n  start: new Date(100, 0, 0),\n  end: new Date(),\n};\n\nexport const reducer = combineReducers({\n  requestWorking: handleActions(\n    {\n      [loadEventsRequest]: () => true,\n      [combineActions(loadEventsSuccess, loadEventsFailure)]: () => false,\n    },\n    false,\n  ),\n  eventTypes: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.eventTypes,\n    },\n    [],\n  ),\n  persons: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.persons,\n    },\n    [],\n  ),\n  toponyms: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.toponyms,\n    },\n    [],\n  ),\n  events: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) =>\n        orderBy(\n          data.payload.events.map(event => ({\n            ...event,\n            startDate: new Date(event.startDate),\n            endDate: new Date(event.endDate),\n          })),\n          event => event.endDate - event.startDate,\n          'desc',\n        ),\n      [editEvent]: (state, data) =>\n        state.map(event =>\n          event.id === data.payload.id ? data.payload : event,\n        ),\n      [deleteEvent]: (state, data) =>\n        state.filter(event => event.id !== data.payload.id),\n    },\n    [],\n  ),\n  errorOccured: handleActions(\n    {\n      [loadEventsFailure]: () => true,\n    },\n    false,\n  ),\n  timeline: handleActions(\n    {\n      [changeTimelineRange]: (state, { payload: { start, end } }) => ({\n        start,\n        end,\n      }),\n    },\n    timelineDefaultState,\n  ),\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './ducks';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","export const eventsSelector = state => state.events;\nexport const toponymsSelector = state => state.toponyms;\nexport const personsSelector = state => state.persons;\nexport const eventTypesSelector = state => state.eventTypes;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { flow } from 'lodash-es';\nimport Timeline from 'react-visjs-timeline';\nimport { changeTimelineRange } from '../../ducks';\nimport { eventsSelector, eventTypesSelector } from '../../selectors';\n\nconst TIMELINE_OPTIONS = {\n  align: 'center',\n  minHeight: '400px',\n  maxHeight: '400px',\n  type: 'range',\n  tooltip: {\n    followMouse: true,\n    overflowMethod: 'cap',\n  },\n  snap: null,\n  orientation: { axis: 'both' },\n  zoomMin: 1000 * 60 * 60 * 24 * 5,\n};\n\nconst eventTypesToGroupSelector = flow(eventTypesSelector, eventTypes =>\n  eventTypes.map(eventType => ({\n    id: eventType.id,\n    content: eventType.type,\n  })),\n);\n\nconst eventsToTimelineItemsSelector = flow(eventsSelector, events =>\n  events.slice(0, 10).map(event => ({\n    start: event.startDate,\n    end: event.endDate,\n    content: event.name,\n    duration: event.endDate - event.startDate,\n    group: event.type,\n    type:\n      event.endDate - event.startDate <= 1000 * 60 * 60 * 24\n        ? 'point'\n        : 'range',\n  })),\n);\n\nconst EventsTimeline = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(eventsToTimelineItemsSelector);\n  const groups = useSelector(eventTypesToGroupSelector);\n\n  const onRangeChangedHandler = useCallback(\n    ({ start, end }) => {\n      dispatch(changeTimelineRange({ start, end }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      {items && items.length > 0 && (\n        <Timeline\n          options={TIMELINE_OPTIONS}\n          items={items}\n          groups={groups}\n          rangechangedHandler={onRangeChangedHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default EventsTimeline;\n","import React from 'react';\nimport { Layout, PageHeader } from 'antd';\nimport EventsTimeline from './EventsTimeline';\n\nconst DataViewPage = () => (\n  <Layout>\n    <PageHeader ghost={false} title=\"Просмотр данных\" />\n    <Layout.Content>\n      <EventsTimeline />\n    </Layout.Content>\n  </Layout>\n);\n\nexport default DataViewPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Icon } from 'antd';\nimport {\n  eventTypesSelector,\n  eventsSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst DownloadButton = ({ filename = 'events.json' }) => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n\n  const content = JSON.stringify({\n    events,\n    eventTypes,\n    toponyms,\n    persons,\n  });\n\n  return (\n    <Button\n      download={filename}\n      href={URL.createObjectURL(\n        new Blob([content], { type: 'application/json' }),\n      )}\n    >\n      <Icon type=\"download\" />\n      Export to json\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","import React, { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Popconfirm, Table } from 'antd';\nimport {\n  eventTypesSelector,\n  eventsSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst dateFormatter = date =>\n  date.toLocaleString('ru', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\nconst typeFormatter = type => type.type;\nconst personsFormatter = persons =>\n  persons\n    .map(person => `${person.surname} ${person.name} ${person.patron}`)\n    .join();\nconst toponymsFormatter = toponyms =>\n  toponyms.map(toponym => toponym.name).join();\n\nconst startDateSorter = (a, b) => a.startDate - b.startDate;\n\nconst endDateSorter = (a, b) => a.endDate - b.endDate;\n\nconst EditorTable = ({ onSelect, deleteRow }) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const events = useSelector(eventsSelector);\n\n  const eventsWithNestedData = useMemo(\n    () =>\n      events.map(event => ({\n        ...event,\n        type: eventTypes.find(type => type.id === event.type),\n        persons: event.persons\n          ? event.persons.map(personId =>\n              persons.find(person => person.id === personId),\n            )\n          : [],\n        toponyms: event.toponyms\n          ? event.toponyms.map(toponymId =>\n              toponyms.find(toponym => toponym.id === toponymId),\n            )\n          : [],\n      })),\n    [eventTypes, persons, toponyms, events],\n  );\n\n  const onRow = useCallback(\n    record => ({\n      onClick: onSelect ? () => onSelect(record) : undefined,\n    }),\n    [onSelect],\n  );\n\n  const renderDeleteButton = (_, record) => (\n    <Popconfirm\n      title=\"Вы уверены?\"\n      onConfirm={event => {\n        event.stopPropagation();\n        deleteRow(record);\n      }}\n      onCancel={event => {\n        event.stopPropagation();\n      }}\n      okText=\"Да\"\n      cancelText=\"Нет\"\n    >\n      <Button\n        type=\"link\"\n        onClick={event => {\n          event.stopPropagation();\n        }}\n      >\n        Удалить\n      </Button>\n    </Popconfirm>\n  );\n\n  return (\n    <Table\n      dataSource={eventsWithNestedData}\n      rowKey={event => event.id}\n      onRow={onRow}\n    >\n      <Table.Column title=\"Название\" dataIndex=\"name\" width=\"35%\" />\n      <Table.Column\n        title=\"Дата начала\"\n        dataIndex=\"startDate\"\n        width=\"10%\"\n        sorter={startDateSorter}\n        render={dateFormatter}\n      />\n      <Table.Column\n        title=\"Дата окончания\"\n        dataIndex=\"endDate\"\n        width=\"10%\"\n        sorter={endDateSorter}\n        render={dateFormatter}\n      />\n      <Table.Column\n        title=\"Тип\"\n        dataIndex=\"type\"\n        width=\"10%\"\n        filters={eventTypes.map(eventType => ({\n          value: eventType.id,\n          text: eventType.type,\n        }))}\n        onFilter={(value, record) => record.type.id === value}\n        render={typeFormatter}\n      />\n      <Table.Column\n        title=\"Действующие лица\"\n        dataIndex=\"persons\"\n        width=\"15%\"\n        render={personsFormatter}\n      />\n      <Table.Column\n        title=\"Топонимы\"\n        dataIndex=\"toponyms\"\n        width=\"15%\"\n        render={toponymsFormatter}\n      />\n      <Table.Column title=\"\" key=\"delete\" render={renderDeleteButton} />\n    </Table>\n  );\n};\n\nexport default EditorTable;\n","import React, { forwardRef, useCallback, useMemo, useState } from 'react';\nimport { uniq, debounce } from 'lodash-es';\nimport { Select } from 'antd';\n\nconst idSelector = option => option.id;\nconst DEFAULT_NAME_SELECTOR = option => option.name;\n\nconst LazySelectSearch = forwardRef(\n  (\n    {\n      allOptions,\n      value,\n      onChange,\n      placeholder,\n      count = 5,\n      keySelector = idSelector,\n      valueSelector = idSelector,\n      nameSelector = DEFAULT_NAME_SELECTOR,\n    },\n    ref,\n  ) => {\n    const [filteredOptions, setFilteredOptions] = useState([]);\n    const onSearch = useCallback(\n      debounce(inputValue => {\n        setFilteredOptions(\n          allOptions.filter(option =>\n            nameSelector(option)\n              .toLowerCase()\n              .includes(inputValue.toLocaleLowerCase()),\n          ),\n        );\n      }, 300),\n      [allOptions],\n    );\n\n    const onBlur = useCallback(() => {\n      setFilteredOptions([]);\n    }, []);\n\n    const onChangeHandler = useCallback(\n      newValue => {\n        setFilteredOptions([]);\n        onChange(newValue);\n      },\n      [onChange],\n    );\n\n    const mappedValues = useMemo(\n      () => value.map(v => allOptions.find(p => valueSelector(p) === v)),\n      [allOptions, value, valueSelector],\n    );\n\n    const options = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.slice(0, count)\n          : uniq([...allOptions.slice(0, count), ...mappedValues]),\n      [allOptions, count, filteredOptions, mappedValues],\n    );\n    const hidedOptionsCount = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.length - count\n          : allOptions.length - options.length,\n      [allOptions, count, filteredOptions, options.length],\n    );\n\n    return (\n      <Select\n        ref={ref}\n        placeholder={placeholder}\n        mode=\"multiple\"\n        filterOption={false}\n        onSearch={onSearch}\n        onChange={onChangeHandler}\n        onBlur={onBlur}\n        value={value}\n      >\n        {options.map(option => (\n          <Select.Option\n            key={keySelector(option)}\n            value={valueSelector(option)}\n          >\n            {nameSelector(option)}\n          </Select.Option>\n        ))}\n        {hidedOptionsCount > 0 && (\n          <Select.Option\n            key=\"__hidedOptionsCount__\"\n            value=\"__hidedOptionsCount__\"\n            disabled\n          >\n            Еще {hidedOptionsCount} вариантов\n          </Select.Option>\n        )}\n      </Select>\n    );\n  },\n);\n\nexport default LazySelectSearch;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { pick } from 'lodash-es';\nimport { Form, Input, Row, DatePicker, Select, Drawer, Button } from 'antd';\nimport LazySelectSearch from '../../components/LazySelectSearch';\nimport {\n  eventTypesSelector,\n  toponymsSelector,\n  personsSelector,\n} from '../../selectors';\n\nconst dateFormat = 'DD.MM.YYYY';\n\nconst rules = {\n  name: {\n    rules: [{ required: true }],\n  },\n  startDate: {\n    rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n  },\n  endDate: {\n    rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n  },\n  type: {\n    rules: [{ required: true }],\n  },\n  persons: {\n    rules: [{ type: 'array' }],\n  },\n  toponyms: {\n    rules: [{ type: 'array' }],\n  },\n};\n\nconst EventForm = ({\n  event,\n  onSubmit,\n  form: { getFieldDecorator, setFieldsValue, validateFields },\n  visible,\n  onClose,\n}) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const persons = useSelector(personsSelector);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (!err) {\n        onSubmit({ id: event.id, ...values });\n      }\n    });\n  };\n\n  useEffect(() => {\n    setFieldsValue(pick(event, Object.keys(rules)));\n  }, [event, setFieldsValue]);\n\n  return (\n    <Drawer\n      visible={visible}\n      onClose={onClose}\n      placement=\"left\"\n      width={450}\n      closable\n    >\n      <Form layout=\"vertical\">\n        <Row>\n          <Form.Item label=\"Название\">\n            {getFieldDecorator(\n              'name',\n              rules.name,\n            )(<Input placeholder=\"Название\" />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Дата начала\">\n            {getFieldDecorator(\n              'startDate',\n              rules.startDate,\n            )(<DatePicker format={dateFormat} />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Дата окончания\">\n            {getFieldDecorator(\n              'endDate',\n              rules.endDate,\n            )(<DatePicker format={dateFormat} />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Тип\">\n            {getFieldDecorator(\n              'type',\n              rules.type,\n            )(\n              <Select placeholder=\"Выберите тип события\">\n                {eventTypes.map(eventType => (\n                  <Select.Option key={eventType.id} value={eventType.id}>\n                    {eventType.type}\n                  </Select.Option>\n                ))}\n              </Select>,\n            )}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Топонимы\">\n            {getFieldDecorator(\n              'toponyms',\n              rules.toponyms,\n            )(\n              <LazySelectSearch\n                allOptions={toponyms}\n                placeholder=\"Выберите топонимы\"\n              />,\n            )}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Действующие лица\">\n            {getFieldDecorator(\n              'persons',\n              rules.persons,\n            )(\n              <LazySelectSearch\n                allOptions={persons}\n                nameSelector={p => `${p.surname} ${p.name} ${p.patron}`}\n                placeholder=\"Выберите действующих лиц\"\n              />,\n            )}\n          </Form.Item>\n        </Row>\n        <div\n          style={{\n            position: 'absolute',\n            right: 0,\n            bottom: 0,\n            width: '100%',\n            borderTop: '1px solid #e9e9e9',\n            padding: '10px 16px',\n            background: '#fff',\n            textAlign: 'right',\n          }}\n        >\n          <Button onClick={onSubmitHandler} type=\"primary\">\n            Сохранить\n          </Button>\n        </div>\n      </Form>\n    </Drawer>\n  );\n};\n\nconst WrappedEventForm = Form.create()(EventForm);\n\nexport default WrappedEventForm;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Layout, PageHeader } from 'antd';\nimport moment from 'moment';\nimport DownloadButton from './DownloadButton';\nimport EditorTable from './EditorTable';\nimport EventForm from './EventForm';\nimport { editEvent, deleteEvent } from '../../ducks';\n\nconst DataEditorPage = () => {\n  const dispatch = useDispatch();\n  const [event, setEvent] = useState(null);\n  const onSelect = useCallback(\n    value =>\n      setEvent({\n        ...value,\n        startDate: moment(value.startDate),\n        endDate: moment(value.endDate),\n        type: value.type.id,\n        toponyms: value.toponyms.map(toponym => toponym.id),\n        persons: value.persons.map(person => person.id),\n      }),\n    [],\n  );\n\n  const closeForm = useCallback(() => setEvent(null), []);\n\n  const onSave = useCallback(\n    value => {\n      dispatch(\n        editEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n    },\n    [dispatch, closeForm],\n  );\n\n  const onDelete = useCallback(\n    value => {\n      dispatch(deleteEvent(value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <Layout>\n      <PageHeader\n        ghost={false}\n        title=\"Редактирование данных\"\n        extra={<DownloadButton />}\n      />\n      <Layout.Content>\n        <EditorTable onSelect={onSelect} deleteRow={onDelete} />\n        <EventForm\n          event={event}\n          visible={event !== null}\n          onClose={closeForm}\n          onSubmit={onSave}\n        />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataEditorPage;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Link, Redirect, Switch, useLocation } from 'react-router-dom';\nimport { Layout, Menu, Icon } from 'antd';\nimport { loadEvents } from '../ducks';\nimport DataViewPage from './DataViewPage';\nimport DataEditorPage from './DataEditorPage';\nimport { editorDataPage, viewDataPage } from './routes';\n\nconst ROUTES = [viewDataPage, editorDataPage];\n\nconst FULL_SIDER_WIDTH = 240;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const selectedMenuKeys = useMemo(\n    () => [ROUTES.find(route => route === pathname)],\n    [pathname],\n  );\n\n  useEffect(() => {\n    dispatch(loadEvents());\n  }, [dispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }} hasSider>\n      <Layout.Sider\n        theme=\"dark\"\n        collapsible\n        width={FULL_SIDER_WIDTH}\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedMenuKeys}>\n          <Menu.Item key={viewDataPage}>\n            <Link to={viewDataPage}>\n              <Icon type=\"pie-chart\" />\n              <span>Просмотр данных</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={editorDataPage}>\n            <Link to={editorDataPage}>\n              <Icon type=\"edit\" />\n              <span>Редактирование данных</span>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout\n        style={{\n          marginLeft: collapsed ? 80 : FULL_SIDER_WIDTH,\n          transition: 'margin 0.2s',\n        }}\n      >\n        <Layout.Content>\n          <Switch>\n            <Route path={viewDataPage} component={DataViewPage} />\n            <Route path={editorDataPage} component={DataEditorPage} />\n            <Redirect to={viewDataPage} />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","export const viewDataPage = '/view';\nexport const editorDataPage = '/editor';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App/App';\nimport './index.css';\n\nconst renderApp = () => (\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n);\n\nReactDOM.render(renderApp(), document.getElementById('root'));\n"],"sourceRoot":""}