{"version":3,"sources":["ducks.js","store.js","selectors.js","App/DataViewPage/TimelineAxis.js","App/DataViewPage/EventsTimeline.js","App/DataViewPage/DataViewPage.js","App/DataEditorPage/DownloadButton.js","App/DataEditorPage/EditorTable.js","components/DateBox.js","components/constants.js","components/SelectBox.js","components/LazySelectSearch.js","components/WrappedComponents.js","App/DataEditorPage/validators.js","App/DataEditorPage/EventForm.js","App/DataEditorPage/routes.js","App/routes.js","App/DataEditorPage/DataEditorPage.js","App/App.js","index.js"],"names":["loadEventsRequest","createAction","loadEventsSuccess","loadEventsFailure","editEvent","deleteEvent","addEvent","combineReducers","isFetching","handleActions","combineActions","error","state","data","eventTypes","payload","persons","toponyms","events","orderBy","map","event","startDate","Date","endDate","id","filter","uniqueId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","eventsSelector","toponymsSelector","personsSelector","eventTypesSelector","isFetchingSelector","errorSelector","TICK_LENGTH","TimelineAxis","ticks","xMin","xMax","yMax","className","d","join","fill","stroke","value","xOffset","key","transform","y2","style","textAnchor","fontSize","EventsTimeline","useSelector","eventsWithTypes","useMemo","type","find","useState","width","height","sizes","setSizes","svgRef","useRef","domainDates","flatMap","evenTypesAsString","it","getColor","scaleOrdinal","schemeSet2","domain","xScale","scaleTime","extent","range","nice","xTicks","toLocaleDateString","eventsForDrawing","x1","x2","yScale","scaleBand","length","paddingOuter","paddingInner","useLayoutEffect","current","getBoundingClientRect","ref","index","x","y","bandwidth","xmlns","Math","floor","textAlign","lineHeight","name","DataViewPage","ghost","title","Content","minHeight","display","alignItems","justifyContent","size","message","description","showIcon","DownloadButton","filename","content","JSON","stringify","download","href","URL","createObjectURL","Blob","DownloadOutlined","dateFormatter","date","toLocaleString","year","month","day","typeFormatter","personsFormatter","person","surname","patron","toponymsFormatter","toponym","startDateSorter","a","b","endDateSorter","EditorTable","onAdd","onSelect","deleteRow","setFilter","eventsWithNestedData","personId","toponymId","toLowerCase","includes","onRow","useCallback","record","onClick","undefined","onSearch","debounce","flexDirection","padding","Search","placeholder","dataSource","rowKey","Column","dataIndex","sorter","render","filters","eventType","text","onFilter","_","onConfirm","stopPropagation","onCancel","okText","cancelText","DateBox","dateFormat","otherProps","format","ID_FACTORY","NAME_FACTORY","OPTIONS_DEFAULT_VALUE","SelectBox","options","optionKeyFactory","optionValueFactory","optionNameFactory","option","Option","DEFAULT_VALUE","LazySelectSearch","allOptions","onChange","count","filteredOptions","setFilteredOptions","inputValue","toLocaleLowerCase","onBlur","onChangeHandler","newValue","mappedValues","v","p","slice","uniq","hidedOptionsCount","mode","filterOption","disabled","wrapIntoField","Component","label","validate","allowNull","identity","parse","input","onFocus","meta","invalid","touched","Item","validateStatus","help","wrapIntoDebouncedInput","debounceTimeout","onChangeFormProps","viewValue","setViewValue","onChangeDebounced","updatedValue","target","WrappedTextArea","Input","TextArea","WrappedDateBox","WrappedSelectBox","WrappedLazySelectSearch","required","isNil","isArray","dateMoreThanOrEqual","fieldName","fieldLabel","allValues","isBefore","composeValidators","validators","reduce","validator","typeNameFactory","patronNameFactory","INITIAL_EVENT_VALUE","EventForm","onSubmit","onClose","eventId","useParams","placement","visible","closable","destroyOnClose","Number","initialValues","moment","convertEventToFormFormat","values","handleSubmit","layout","onFinish","rows","isAfter","position","right","bottom","borderTop","background","htmlType","addRoute","editRoute","DataEditorPage","dispatch","useDispatch","history","useHistory","push","generatePath","closeForm","changeEvent","toDate","success","onDelete","createEvent","showAddForm","extra","path","ROUTES","App","collapsed","setCollapsed","pathname","useLocation","selectedMenuKeys","route","useEffect","eventsData","hasSider","Sider","theme","collapsible","onCollapse","overflow","left","selectedKeys","to","PieChartOutlined","EditOutlined","marginLeft","transition","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c874f478.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { combineActions, createAction, handleActions } from 'redux-actions';\nimport { orderBy, uniqueId } from 'lodash-es';\n\nconst loadEventsRequest = createAction('loadEventsRequest');\nconst loadEventsSuccess = createAction('loadEventsSuccess');\nconst loadEventsFailure = createAction('loadEventsFailure');\n\nexport const loadEvents = () => async (dispatch) => {\n  dispatch(loadEventsRequest());\n  try {\n    const eventsData = await import('./events.json');\n    dispatch(loadEventsSuccess(eventsData));\n  } catch (error) {\n    dispatch(loadEventsFailure(error));\n  }\n};\n\nexport const editEvent = createAction('editEvent');\nexport const deleteEvent = createAction('deleteEvent');\nexport const addEvent = createAction('addEvent');\n\nexport default combineReducers({\n  isFetching: handleActions(\n    {\n      [loadEventsRequest]: () => true,\n      [combineActions(loadEventsSuccess, loadEventsFailure)]: () => false,\n    },\n    false,\n  ),\n  error: handleActions(\n    {\n      [loadEventsRequest]: () => null,\n      [loadEventsFailure]: (state, data) => data,\n    },\n    null,\n  ),\n  eventTypes: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.eventTypes,\n    },\n    [],\n  ),\n  persons: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.persons,\n    },\n    [],\n  ),\n  toponyms: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.toponyms,\n    },\n    [],\n  ),\n  events: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) =>\n        orderBy(\n          data.payload.events.map((event) => ({\n            ...event,\n            startDate: new Date(event.startDate),\n            endDate: new Date(event.endDate),\n          })),\n          (event) => event.endDate - event.startDate,\n          'desc',\n        ),\n      [editEvent]: (state, data) =>\n        state.map((event) =>\n          event.id === data.payload.id ? data.payload : event,\n        ),\n      [deleteEvent]: (state, data) =>\n        state.filter((event) => event.id !== data.payload.id),\n      [addEvent]: (state, data) => [\n        ...state,\n        { ...data.payload, id: uniqueId() },\n      ],\n    },\n    [],\n  ),\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './ducks';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","export const eventsSelector = (state) => state.events;\nexport const toponymsSelector = (state) => state.toponyms;\nexport const personsSelector = (state) => state.persons;\nexport const eventTypesSelector = (state) => state.eventTypes;\nexport const isFetchingSelector = (state) => state.isFetching;\nexport const errorSelector = (state) => state.error;\n","import React from 'react';\nimport './index.css';\n\nconst TICK_LENGTH = 6;\nconst TEXT_MARGIN = 20;\n\nconst TimelineAxis = ({ ticks, xMin, xMax, yMax }) => {\n  return (\n    <g className=\"x-axis\">\n      <path\n        d={[\n          'M',\n          xMin,\n          yMax - TEXT_MARGIN,\n          'v',\n          -TICK_LENGTH,\n          'H',\n          xMax,\n          'v',\n          TICK_LENGTH,\n        ].join(' ')}\n        fill=\"none\"\n        stroke=\"currentColor\"\n      />\n      {ticks.map(({ value, xOffset }) => (\n        <g\n          key={value}\n          transform={`translate(${xOffset}, ${\n            yMax - TEXT_MARGIN - TICK_LENGTH\n          })`}\n        >\n          <line y2={TICK_LENGTH} stroke=\"currentColor\" />\n          <text\n            style={{\n              textAnchor: 'middle',\n              transform: `translateY(${TEXT_MARGIN}px)`,\n              fontSize: '14px',\n            }}\n          >\n            {value}\n          </text>\n        </g>\n      ))}\n    </g>\n  );\n};\n\nexport default TimelineAxis;\n","import React, { useLayoutEffect, useMemo, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { extent, range } from 'd3-array';\nimport { scaleBand, scaleOrdinal, scaleTime } from 'd3-scale';\nimport { schemeSet2 } from 'd3-scale-chromatic';\nimport { eventsSelector, eventTypesSelector } from 'selectors';\nimport TimelineAxis from './TimelineAxis';\n\nconst DEFAULT_WIDTH = 400;\nconst DEFAULT_HEIGHT = 400;\nconst MARGIN_LEFT = 50;\nconst MARGIN_TOP = 0;\nconst MARGIN_BOTTOM = 25;\n\nconst EventsTimeline = () => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n\n  const eventsWithTypes = useMemo(\n    () =>\n      events.map((event) => ({\n        ...event,\n        type: eventTypes.find((type) => type.id === event.type).type,\n      })),\n    [events, eventTypes],\n  );\n\n  const [sizes, setSizes] = useState({\n    width: DEFAULT_WIDTH,\n    height: DEFAULT_HEIGHT,\n  });\n  const svgRef = useRef();\n\n  const domainDates = useMemo(\n    () => events.flatMap((event) => [event.endDate, event.startDate]),\n    [events],\n  );\n\n  const evenTypesAsString = useMemo(() => eventTypes.map((it) => it.type), [\n    eventTypes,\n  ]);\n\n  const getColor = scaleOrdinal(schemeSet2).domain(evenTypesAsString);\n\n  const xScale = scaleTime()\n    .domain(extent(domainDates))\n    .range([MARGIN_LEFT, sizes.width - MARGIN_LEFT])\n    .nice();\n\n  const xTicks = xScale.ticks().map((value) => ({\n    value: value.toLocaleDateString(),\n    xOffset: xScale(value),\n  }));\n\n  const eventsForDrawing = eventsWithTypes\n    .map((event) => {\n      const x1 = xScale(event.startDate);\n      const x2 = xScale(event.endDate);\n      const width = x2 - x1;\n      return { x1, x2, width, ...event };\n    })\n    .filter((event) => event.width > 10);\n\n  const yScale = scaleBand()\n    .domain(range(eventsForDrawing.length))\n    .range([MARGIN_TOP, sizes.height - MARGIN_BOTTOM])\n    .paddingOuter(0.3)\n    .paddingInner(0.1);\n\n  useLayoutEffect(() => {\n    const { width, height } = svgRef.current.getBoundingClientRect();\n    setSizes({ width, height });\n  }, []);\n\n  return (\n    <svg className=\"timeline-container\" ref={svgRef}>\n      {eventsForDrawing.map((event, index) => (\n        <g key={event.id}>\n          <rect\n            x={event.x1}\n            width={event.width}\n            y={yScale(index)}\n            height={yScale.bandwidth()}\n            fill={getColor(event.type)}\n          />\n          <foreignObject\n            x={event.x1}\n            width={event.width}\n            y={yScale(index)}\n            height={yScale.bandwidth()}\n          >\n            <div\n              className=\"plain-text\"\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n              style={{\n                fontSize: `${Math.floor(yScale.bandwidth()) - 1}px`,\n                textAlign: 'center',\n                width: `${event.width}px`,\n                height: `${yScale.bandwidth()}px`,\n                lineHeight: `${yScale.bandwidth()}px`,\n              }}\n            >\n              {event.name}\n            </div>\n          </foreignObject>\n        </g>\n      ))}\n      <TimelineAxis\n        ticks={xTicks}\n        xMin={MARGIN_LEFT}\n        xMax={sizes.width - MARGIN_LEFT}\n        yMax={sizes.height}\n      />\n    </svg>\n  );\n};\n\nexport default EventsTimeline;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Alert, Layout, PageHeader, Spin } from 'antd';\nimport { errorSelector, isFetchingSelector } from 'selectors';\nimport EventsTimeline from './EventsTimeline';\n\nconst DataViewPage = () => {\n  const isFetching = useSelector(isFetchingSelector);\n  const error = useSelector(errorSelector);\n\n  return (\n    <Layout>\n      <PageHeader ghost={false} title=\"Просмотр данных\" />\n      <Layout.Content>\n        {isFetching && (\n          <div\n            style={{\n              minHeight: 200,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Spin size=\"large\" />\n          </div>\n        )}\n        {error && (\n          <Alert\n            message=\"Произошла ошибка\"\n            description={error}\n            type=\"error\"\n            showIcon\n          />\n        )}\n        {!isFetching && !error && <EventsTimeline />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataViewPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'antd';\nimport { DownloadOutlined } from '@ant-design/icons';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\n\nconst DownloadButton = ({ filename = 'events.json' }) => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n\n  const content = JSON.stringify({\n    events,\n    eventTypes,\n    toponyms,\n    persons,\n  });\n\n  return (\n    <Button\n      download={filename}\n      href={URL.createObjectURL(\n        new Blob([content], { type: 'application/json' }),\n      )}\n    >\n      <DownloadOutlined />\n      Export to json\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { debounce } from 'lodash-es';\nimport { Button, Input, Popconfirm, Table } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\n\nconst dateFormatter = (date) =>\n  date.toLocaleString('ru', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\nconst typeFormatter = (type) => type.type;\nconst personsFormatter = (persons) =>\n  persons\n    .map((person) => `${person.surname} ${person.name} ${person.patron}`)\n    .join();\nconst toponymsFormatter = (toponyms) =>\n  toponyms.map((toponym) => toponym.name).join();\n\nconst startDateSorter = (a, b) => a.startDate - b.startDate;\n\nconst endDateSorter = (a, b) => a.endDate - b.endDate;\n\nconst EditorTable = ({ onAdd, onSelect, deleteRow }) => {\n  const [filter, setFilter] = useState('');\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const events = useSelector(eventsSelector);\n\n  const eventsWithNestedData = useMemo(\n    () =>\n      events\n        .map((event) => ({\n          ...event,\n          type: eventTypes.find((type) => type.id === event.type),\n          persons: event.persons\n            ? event.persons.map((personId) =>\n                persons.find((person) => person.id === personId),\n              )\n            : [],\n          toponyms: event.toponyms\n            ? event.toponyms.map((toponymId) =>\n                toponyms.find((toponym) => toponym.id === toponymId),\n              )\n            : [],\n        }))\n        .filter((it) => it.name.toLowerCase().includes(filter.toLowerCase())),\n    [events, eventTypes, persons, toponyms, filter],\n  );\n\n  const onRow = useCallback(\n    (record) => ({\n      onClick: onSelect ? () => onSelect(record) : undefined,\n    }),\n    [onSelect],\n  );\n\n  const onSearch = useCallback(\n    debounce((value) => setFilter(value)),\n    [],\n  );\n\n  const renderDeleteButton = (_, record) => (\n    <Popconfirm\n      title=\"Вы уверены?\"\n      onConfirm={(event) => {\n        event.stopPropagation();\n        deleteRow(record);\n      }}\n      onCancel={(event) => {\n        event.stopPropagation();\n      }}\n      okText=\"Да\"\n      cancelText=\"Нет\"\n    >\n      <Button\n        type=\"link\"\n        onClick={(event) => {\n          event.stopPropagation();\n        }}\n      >\n        Удалить\n      </Button>\n    </Popconfirm>\n  );\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '10px 20px',\n        }}\n      >\n        <Button type=\"primary\" onClick={onAdd}>\n          Добавить\n        </Button>\n        <Input.Search\n          placeholder=\"Введите значение для поиска\"\n          onSearch={onSearch}\n          style={{ width: 400 }}\n        />\n      </div>\n      <Table\n        dataSource={eventsWithNestedData}\n        rowKey={(event) => event.id}\n        onRow={onRow}\n      >\n        <Table.Column title=\"Название\" dataIndex=\"name\" width=\"35%\" />\n        <Table.Column\n          title=\"Дата начала\"\n          dataIndex=\"startDate\"\n          width=\"10%\"\n          sorter={startDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Дата окончания\"\n          dataIndex=\"endDate\"\n          width=\"10%\"\n          sorter={endDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Тип\"\n          dataIndex=\"type\"\n          width=\"10%\"\n          filters={eventTypes.map((eventType) => ({\n            value: eventType.id,\n            text: eventType.type,\n          }))}\n          onFilter={(value, record) => record.type.id === value}\n          render={typeFormatter}\n        />\n        <Table.Column\n          title=\"Действующие лица\"\n          dataIndex=\"persons\"\n          width=\"15%\"\n          render={personsFormatter}\n        />\n        <Table.Column\n          title=\"Топонимы\"\n          dataIndex=\"toponyms\"\n          width=\"15%\"\n          render={toponymsFormatter}\n        />\n        <Table.Column title=\"\" key=\"delete\" render={renderDeleteButton} />\n      </Table>\n    </div>\n  );\n};\n\nexport default EditorTable;\n","import React from 'react';\nimport { DatePicker } from 'antd';\n\nconst DEFAULT_DATE_FORMAT = 'DD.MM.YYYY';\n\nconst DateBox = ({ dateFormat = DEFAULT_DATE_FORMAT, ...otherProps }) => (\n  <DatePicker format={dateFormat} {...otherProps} />\n);\n\nexport default DateBox;\n","export const ID_FACTORY = (it) => it.id;\n\nexport const NAME_FACTORY = (it) => it.name;\n","import React from 'react';\nimport { Select } from 'antd';\nimport { ID_FACTORY, NAME_FACTORY } from './constants';\n\nconst OPTIONS_DEFAULT_VALUE = [];\n\nconst SelectBox = ({\n  options = OPTIONS_DEFAULT_VALUE,\n  optionKeyFactory = ID_FACTORY,\n  optionValueFactory = ID_FACTORY,\n  optionNameFactory = NAME_FACTORY,\n  ...otherProps\n}) => (\n  <Select {...otherProps}>\n    {options.map((option) => (\n      <Select.Option\n        key={optionKeyFactory(option)}\n        value={optionValueFactory(option)}\n      >\n        {optionNameFactory(option)}\n      </Select.Option>\n    ))}\n  </Select>\n);\nexport default SelectBox;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { debounce, uniq } from 'lodash-es';\nimport { Select } from 'antd';\nimport { ID_FACTORY, NAME_FACTORY } from './constants';\n\nconst DEFAULT_VALUE = [];\n\nconst LazySelectSearch = ({\n  allOptions,\n  value = DEFAULT_VALUE,\n  onChange,\n  placeholder,\n  count = 5,\n  optionKeyFactory = ID_FACTORY,\n  optionValueFactory = ID_FACTORY,\n  optionNameFactory = NAME_FACTORY,\n}) => {\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const onSearch = useCallback(\n    debounce((inputValue) => {\n      setFilteredOptions(\n        allOptions.filter((option) =>\n          optionNameFactory(option)\n            .toLowerCase()\n            .includes(inputValue.toLocaleLowerCase()),\n        ),\n      );\n    }, 300),\n    [allOptions],\n  );\n\n  const onBlur = useCallback(() => {\n    setFilteredOptions([]);\n  }, []);\n\n  const onChangeHandler = useCallback(\n    (newValue) => {\n      setFilteredOptions([]);\n      onChange(newValue);\n    },\n    [onChange],\n  );\n\n  const mappedValues = useMemo(\n    () => value.map((v) => allOptions.find((p) => optionValueFactory(p) === v)),\n    [allOptions, value, optionValueFactory],\n  );\n\n  const options = useMemo(\n    () =>\n      filteredOptions.length\n        ? filteredOptions.slice(0, count)\n        : uniq([...allOptions.slice(0, count), ...mappedValues]),\n    [allOptions, count, filteredOptions, mappedValues],\n  );\n  const hidedOptionsCount = useMemo(\n    () =>\n      filteredOptions.length\n        ? filteredOptions.length - count\n        : allOptions.length - options.length,\n    [allOptions, count, filteredOptions, options.length],\n  );\n\n  return (\n    <Select\n      placeholder={placeholder}\n      mode=\"multiple\"\n      filterOption={false}\n      onSearch={onSearch}\n      onChange={onChangeHandler}\n      onBlur={onBlur}\n      value={value}\n    >\n      {options.map((option) => (\n        <Select.Option\n          key={optionKeyFactory(option)}\n          value={optionValueFactory(option)}\n        >\n          {optionNameFactory(option)}\n        </Select.Option>\n      ))}\n      {hidedOptionsCount > 0 && (\n        <Select.Option\n          key=\"__hidedOptionsCount__\"\n          value=\"__hidedOptionsCount__\"\n          disabled\n        >\n          Еще {hidedOptionsCount} вариантов\n        </Select.Option>\n      )}\n    </Select>\n  );\n};\n\nexport default LazySelectSearch;\n","import React, { useCallback, useState } from 'react';\nimport { debounce, identity } from 'lodash-es';\nimport { Field } from 'react-final-form';\nimport { Form, Input } from 'antd';\nimport DateBox from './DateBox';\nimport SelectBox from './SelectBox';\nimport LazySelectSearch from './LazySelectSearch';\n\nconst wrapIntoField = (Component) => ({\n  name,\n  label,\n  validate,\n  allowNull = true,\n  format = identity,\n  parse = identity,\n  ...otherProps\n}) => (\n  <Field\n    name={name}\n    format={format}\n    parse={parse}\n    allowNull={allowNull}\n    validate={validate}\n  >\n    {({\n      input: { value, onChange, onBlur, onFocus },\n      meta: { invalid, touched, error },\n    }) => (\n      <Form.Item\n        label={label}\n        validateStatus={touched && invalid ? 'error' : 'success'}\n        help={touched && invalid ? error : undefined}\n      >\n        <Component\n          value={value}\n          onChange={onChange}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          {...otherProps}\n        />\n      </Form.Item>\n    )}\n  </Field>\n);\n\nconst wrapIntoDebouncedInput = (Component) =>\n  function DebouncedInput({\n    debounceTimeout = 300,\n    onChange: onChangeFormProps,\n    value,\n    ...otherProps\n  }) {\n    const [viewValue, setViewValue] = useState(value);\n    const onChangeDebounced = useCallback(\n      debounce((updatedValue) => {\n        onChangeFormProps(updatedValue);\n      }, debounceTimeout),\n      [],\n    );\n\n    const onChange = useCallback(\n      ({ target: { value: newValue } }) => {\n        setViewValue(newValue);\n        onChangeDebounced(newValue);\n      },\n      [onChangeDebounced],\n    );\n\n    return <Component value={viewValue} onChange={onChange} {...otherProps} />;\n  };\n\nconst WrappedInput = wrapIntoField(wrapIntoDebouncedInput(Input));\n\nconst WrappedTextArea = wrapIntoField(wrapIntoDebouncedInput(Input.TextArea));\n\nconst WrappedDateBox = wrapIntoField(DateBox);\n\nconst WrappedSelectBox = wrapIntoField(SelectBox);\n\nconst WrappedLazySelectSearch = wrapIntoField(LazySelectSearch);\n\nexport {\n  WrappedInput as Input,\n  WrappedTextArea as TextArea,\n  WrappedDateBox as DateBox,\n  WrappedSelectBox as SelectBox,\n  WrappedLazySelectSearch as LazySelectSearch,\n};\n","import { isArray, isNil } from 'lodash-es';\nimport {} from 'moment';\n\nexport const required = (value) =>\n  isNil(value) || value === '' || (isArray(value) && value.length === 0)\n    ? 'Поле обязательно'\n    : undefined;\n\nexport const dateLessThanOrEqual = (fieldName, fieldLabel) => (\n  value,\n  allValues,\n) =>\n  value.isAfter(allValues[fieldName], 'day')\n    ? `Значение поля должно быть меньше чем ${fieldLabel}`\n    : undefined;\n\nexport const dateMoreThanOrEqual = (fieldName, fieldLabel) => (\n  value,\n  allValues,\n) =>\n  value.isBefore(allValues[fieldName], 'day')\n    ? `Значение поля должно быть больше чем ${fieldLabel}`\n    : undefined;\n\nexport const moreThanOrEqual = (fieldName, fieldLabel) => (value, allValues) =>\n  value < allValues[fieldName]\n    ? `Значение поля должно быть больше чем ${fieldLabel}`\n    : undefined;\n\nexport const lessThanOrEqual = (fieldName, fieldLabel) => (value, allValues) =>\n  value > allValues[fieldName]\n    ? `Значение поля должно быть меньше чем ${fieldLabel}`\n    : undefined;\n\nexport const composeValidators = (...validators) => (value, allValues, meta) =>\n  validators.reduce(\n    (error, validator) => error || validator(value, allValues, meta),\n    undefined,\n  );\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport { useParams } from 'react-router-dom';\nimport { Button, Drawer, Form, Spin } from 'antd';\nimport moment from 'moment';\nimport { DateBox, LazySelectSearch, SelectBox, TextArea } from 'components';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\nimport {\n  composeValidators,\n  dateLessThanOrEqual,\n  dateMoreThanOrEqual,\n  required,\n} from './validators';\n\nconst typeNameFactory = (it) => it.type;\n\nconst patronNameFactory = (it) => `${it.surname} ${it.name} ${it.patron}`;\n\nconst convertEventToFormFormat = (event) => ({\n  ...event,\n  startDate: moment(event.startDate),\n  endDate: moment(event.endDate),\n});\n\nconst INITIAL_EVENT_VALUE = {\n  name: null,\n  startDate: null,\n  endDate: null,\n  type: null,\n  toponyms: [],\n  persons: [],\n};\n\nconst EventForm = ({ onSubmit, onClose, title }) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const persons = useSelector(personsSelector);\n  const events = useSelector(eventsSelector);\n  const { id: eventId } = useParams();\n\n  if (events.length < 1) {\n    return (\n      <Drawer\n        title={title}\n        onClose={onClose}\n        placement=\"right\"\n        width={450}\n        visible\n        closable\n        destroyOnClose\n      >\n        <div\n          style={{\n            minHeight: 200,\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Spin size=\"large\" />\n        </div>\n      </Drawer>\n    );\n  }\n\n  const event = events.find((it) => it.id === Number(eventId));\n\n  const initialValues = event\n    ? convertEventToFormFormat(event)\n    : INITIAL_EVENT_VALUE;\n\n  return (\n    <Drawer\n      title={title}\n      onClose={onClose}\n      placement=\"right\"\n      width={450}\n      visible\n      closable\n      destroyOnClose\n    >\n      <FinalForm\n        initialValues={initialValues}\n        onSubmit={(values) => {\n          onSubmit(values);\n        }}\n      >\n        {({ handleSubmit }) => (\n          <Form layout=\"vertical\" onFinish={handleSubmit}>\n            <Form.Item>\n              <TextArea\n                name=\"name\"\n                label=\"Название\"\n                rows={4}\n                placeholder=\"Название\"\n                validate={required}\n              />\n            </Form.Item>\n            <Form.Item>\n              <DateBox\n                name=\"startDate\"\n                label=\"Дата начала\"\n                validate={composeValidators(\n                  required,\n                  dateLessThanOrEqual('endDate', 'Дата окончания'),\n                )}\n              />\n            </Form.Item>\n            <Form.Item>\n              <DateBox\n                name=\"endDate\"\n                label=\"Дата окончания\"\n                validate={composeValidators(\n                  required,\n                  dateMoreThanOrEqual('startDate', 'Дата начала'),\n                )}\n              />\n            </Form.Item>\n            <Form.Item>\n              <SelectBox\n                name=\"type\"\n                label=\"Тип\"\n                options={eventTypes}\n                optionNameFactory={typeNameFactory}\n                validate={required}\n              />\n            </Form.Item>\n            <Form.Item>\n              <LazySelectSearch\n                name=\"toponyms\"\n                label=\"Топонимы\"\n                allOptions={toponyms}\n                placeholder=\"Выберите топонимы\"\n              />\n            </Form.Item>\n            <Form.Item>\n              <LazySelectSearch\n                name=\"persons\"\n                label=\"Действующие лица\"\n                allOptions={persons}\n                optionNameFactory={patronNameFactory}\n                placeholder=\"Выберите действующих лиц\"\n              />\n            </Form.Item>\n            <div\n              style={{\n                position: 'absolute',\n                right: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px',\n                background: '#fff',\n                textAlign: 'right',\n              }}\n            >\n              <Button htmlType=\"submit\" type=\"primary\">\n                Сохранить\n              </Button>\n            </div>\n          </Form>\n        )}\n      </FinalForm>\n    </Drawer>\n  );\n};\n\nexport default EventForm;\n","import { editorDataPage } from 'App/routes';\n\nexport const addRoute = `${editorDataPage}/add`;\n\nexport const editRoute = `${editorDataPage}/edit/:id`;\n","export const viewDataPage = '/view';\nexport const editorDataPage = '/editor';\n","import React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { generatePath, Route, useHistory } from 'react-router-dom';\nimport { Layout, message, PageHeader } from 'antd';\nimport { uniqueId } from 'lodash-es';\nimport { addEvent, deleteEvent, editEvent } from 'ducks';\nimport { editorDataPage } from 'App/routes';\nimport DownloadButton from './DownloadButton';\nimport EditorTable from './EditorTable';\nimport EventForm from './EventForm';\nimport { addRoute, editRoute } from './routes';\n\nconst DataEditorPage = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const onSelect = useCallback(\n    (value) => {\n      history.push(generatePath(editRoute, { id: value.id }));\n    },\n    [history],\n  );\n\n  const closeForm = useCallback(() => {\n    history.push(editorDataPage);\n  }, [history]);\n\n  const changeEvent = useCallback(\n    (value) => {\n      dispatch(\n        editEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n      message.success('Событие успешно изменено');\n    },\n    [dispatch, closeForm],\n  );\n\n  const onDelete = useCallback(\n    (value) => {\n      dispatch(deleteEvent(value));\n    },\n    [dispatch],\n  );\n\n  const createEvent = useCallback(\n    (value) => {\n      dispatch(\n        addEvent({\n          ...value,\n          id: uniqueId(),\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n      message.success('Событие успешно добавлено');\n    },\n    [closeForm, dispatch],\n  );\n\n  const showAddForm = useCallback(() => {\n    history.push(addRoute);\n  }, [history]);\n\n  return (\n    <Layout>\n      <PageHeader\n        ghost={false}\n        title=\"Редактирование данных\"\n        extra={<DownloadButton />}\n      />\n      <Layout.Content>\n        <EditorTable\n          onAdd={showAddForm}\n          onSelect={onSelect}\n          deleteRow={onDelete}\n        />\n        <Route\n          path={addRoute}\n          render={() => (\n            <EventForm\n              onClose={closeForm}\n              onSubmit={createEvent}\n              title=\"Добавление события\"\n            />\n          )}\n        />\n        <Route\n          path={editRoute}\n          render={() => (\n            <EventForm\n              onClose={closeForm}\n              onSubmit={changeEvent}\n              title=\"Редактирование события\"\n            />\n          )}\n        />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataEditorPage;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport { EditOutlined, PieChartOutlined } from '@ant-design/icons';\nimport { loadEvents } from '../ducks';\nimport DataViewPage from './DataViewPage';\nimport DataEditorPage from './DataEditorPage';\nimport { editorDataPage, viewDataPage } from './routes';\n\nconst ROUTES = [viewDataPage, editorDataPage];\n\nconst FULL_SIDER_WIDTH = 240;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const selectedMenuKeys = useMemo(\n    () => [ROUTES.find((route) => route === pathname)],\n    [pathname],\n  );\n\n  useEffect(() => {\n    dispatch(loadEvents());\n  }, [dispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }} hasSider>\n      <Layout.Sider\n        theme=\"dark\"\n        collapsible\n        width={FULL_SIDER_WIDTH}\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedMenuKeys}>\n          <Menu.Item key={viewDataPage}>\n            <Link to={viewDataPage}>\n              <PieChartOutlined />\n              <span>Просмотр данных</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={editorDataPage}>\n            <Link to={editorDataPage}>\n              <EditOutlined />\n              <span>Редактирование данных</span>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout\n        style={{\n          marginLeft: collapsed ? 80 : FULL_SIDER_WIDTH,\n          transition: 'margin 0.2s',\n        }}\n      >\n        <Layout.Content>\n          <Switch>\n            <Route path={viewDataPage} component={DataViewPage} />\n            <Route path={editorDataPage} component={DataEditorPage} />\n            <Redirect to={viewDataPage} />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App/App';\nimport './index.css';\n\nconst renderApp = () => (\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n);\n\nReactDOM.render(renderApp(), document.getElementById('root'));\n"],"sourceRoot":""}