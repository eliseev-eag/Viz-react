{"version":3,"sources":["ducks.js","store.js","selectors.js","App/DataViewPage/EventsTimeline.js","App/DataViewPage/DataViewPage.js","App/DataEditorPage/DownloadButton.js","App/DataEditorPage/EditorTable.js","components/LazySelectSearch.js","App/DataEditorPage/EventForm.js","App/DataEditorPage/DataEditorPage.js","App/App.js","App/routes.js","index.js"],"names":["loadEventsRequest","createAction","loadEventsSuccess","loadEventsFailure","changeTimelineRange","editEvent","deleteEvent","addEvent","timelineDefaultState","start","Date","end","reducer","combineReducers","requestWorking","handleActions","combineActions","eventTypes","state","data","payload","persons","toponyms","events","orderBy","map","event","startDate","endDate","id","filter","uniqueId","errorOccured","timeline","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","eventsSelector","toponymsSelector","personsSelector","eventTypesSelector","TIMELINE_OPTIONS","align","minHeight","maxHeight","type","tooltip","followMouse","overflowMethod","snap","orientation","axis","zoomMin","eventTypesToGroupSelector","flow","eventType","content","eventsToTimelineItemsSelector","slice","name","duration","group","EventsTimeline","dispatch","useDispatch","items","useSelector","groups","onRangeChangedHandler","useCallback","length","options","rangechangedHandler","DataViewPage","ghost","title","Content","DownloadButton","filename","JSON","stringify","download","href","URL","createObjectURL","Blob","dateFormatter","date","toLocaleString","year","month","day","typeFormatter","personsFormatter","person","surname","patron","join","toponymsFormatter","toponym","startDateSorter","a","b","endDateSorter","EditorTable","onAdd","onSelect","deleteRow","eventsWithNestedData","useMemo","find","personId","toponymId","onRow","record","onClick","undefined","renderTitle","dataSource","rowKey","Column","dataIndex","width","sorter","render","filters","value","text","onFilter","key","_","onConfirm","stopPropagation","onCancel","okText","cancelText","idSelector","option","DEFAULT_NAME_SELECTOR","DEFAULT_VALUE","LazySelectSearch","forwardRef","ref","allOptions","onChange","placeholder","count","keySelector","valueSelector","nameSelector","useState","filteredOptions","setFilteredOptions","onSearch","debounce","inputValue","toLowerCase","includes","toLocaleLowerCase","onBlur","onChangeHandler","newValue","mappedValues","v","p","uniq","hidedOptionsCount","mode","filterOption","Option","disabled","rules","required","message","WrappedEventForm","Form","create","onSubmit","form","getFieldDecorator","setFieldsValue","validateFields","visible","onClose","useEffect","pick","Object","keys","placement","closable","destroyOnClose","layout","Item","label","TextArea","rows","format","style","position","right","bottom","borderTop","padding","background","textAlign","e","preventDefault","err","values","DataEditorPage","isAddFormVisible","setAddFormVisible","setEvent","moment","closeForm","changeEvent","toDate","onDelete","createEvent","showAddForm","extra","ROUTES","App","collapsed","setCollapsed","pathname","useLocation","selectedMenuKeys","route","eventsData","hasSider","Sider","theme","collapsible","onCollapse","overflow","height","left","selectedKeys","to","marginLeft","transition","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8d860a6c.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { combineActions, createAction, handleActions } from 'redux-actions';\nimport { orderBy, uniqueId } from 'lodash-es';\n\nconst loadEventsRequest = createAction('loadEventsRequest');\nconst loadEventsSuccess = createAction('loadEventsSuccess');\nconst loadEventsFailure = createAction('loadEventsFailure');\n\nexport const changeTimelineRange = createAction('changeTimelineRange');\n\nexport const loadEvents = () => async dispatch => {\n  dispatch(loadEventsRequest());\n  try {\n    const eventsData = await import('./events.json');\n    dispatch(loadEventsSuccess(eventsData));\n  } catch (error) {\n    dispatch(loadEventsFailure(error));\n  }\n};\n\nexport const editEvent = createAction('editEvent');\nexport const deleteEvent = createAction('deleteEvent');\nexport const addEvent = createAction('addEvent');\n\nconst timelineDefaultState = {\n  start: new Date(100, 0, 0),\n  end: new Date(),\n};\n\nexport const reducer = combineReducers({\n  requestWorking: handleActions(\n    {\n      [loadEventsRequest]: () => true,\n      [combineActions(loadEventsSuccess, loadEventsFailure)]: () => false,\n    },\n    false,\n  ),\n  eventTypes: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.eventTypes,\n    },\n    [],\n  ),\n  persons: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.persons,\n    },\n    [],\n  ),\n  toponyms: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.toponyms,\n    },\n    [],\n  ),\n  events: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) =>\n        orderBy(\n          data.payload.events.map(event => ({\n            ...event,\n            startDate: new Date(event.startDate),\n            endDate: new Date(event.endDate),\n          })),\n          event => event.endDate - event.startDate,\n          'desc',\n        ),\n      [editEvent]: (state, data) =>\n        state.map(event =>\n          event.id === data.payload.id ? data.payload : event,\n        ),\n      [deleteEvent]: (state, data) =>\n        state.filter(event => event.id !== data.payload.id),\n      [addEvent]: (state, data) => [\n        ...state,\n        { ...data.payload, id: uniqueId() },\n      ],\n    },\n    [],\n  ),\n  errorOccured: handleActions(\n    {\n      [loadEventsFailure]: () => true,\n    },\n    false,\n  ),\n  timeline: handleActions(\n    {\n      [changeTimelineRange]: (state, { payload: { start, end } }) => ({\n        start,\n        end,\n      }),\n    },\n    timelineDefaultState,\n  ),\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './ducks';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","export const eventsSelector = state => state.events;\nexport const toponymsSelector = state => state.toponyms;\nexport const personsSelector = state => state.persons;\nexport const eventTypesSelector = state => state.eventTypes;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { flow } from 'lodash-es';\nimport Timeline from 'react-visjs-timeline';\nimport { changeTimelineRange } from '../../ducks';\nimport { eventsSelector, eventTypesSelector } from '../../selectors';\n\nconst TIMELINE_OPTIONS = {\n  align: 'center',\n  minHeight: '400px',\n  maxHeight: '400px',\n  type: 'range',\n  tooltip: {\n    followMouse: true,\n    overflowMethod: 'cap',\n  },\n  snap: null,\n  orientation: { axis: 'both' },\n  zoomMin: 1000 * 60 * 60 * 24 * 5,\n};\n\nconst eventTypesToGroupSelector = flow(eventTypesSelector, eventTypes =>\n  eventTypes.map(eventType => ({\n    id: eventType.id,\n    content: eventType.type,\n  })),\n);\n\nconst eventsToTimelineItemsSelector = flow(eventsSelector, events =>\n  events.slice(0, 10).map(event => ({\n    start: event.startDate,\n    end: event.endDate,\n    content: event.name,\n    duration: event.endDate - event.startDate,\n    group: event.type,\n    type:\n      event.endDate - event.startDate <= 1000 * 60 * 60 * 24\n        ? 'point'\n        : 'range',\n  })),\n);\n\nconst EventsTimeline = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(eventsToTimelineItemsSelector);\n  const groups = useSelector(eventTypesToGroupSelector);\n\n  const onRangeChangedHandler = useCallback(\n    ({ start, end }) => {\n      dispatch(changeTimelineRange({ start, end }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      {items && items.length > 0 && (\n        <Timeline\n          options={TIMELINE_OPTIONS}\n          items={items}\n          groups={groups}\n          rangechangedHandler={onRangeChangedHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default EventsTimeline;\n","import React from 'react';\nimport { Layout, PageHeader } from 'antd';\nimport EventsTimeline from './EventsTimeline';\n\nconst DataViewPage = () => (\n  <Layout>\n    <PageHeader ghost={false} title=\"Просмотр данных\" />\n    <Layout.Content>\n      <EventsTimeline />\n    </Layout.Content>\n  </Layout>\n);\n\nexport default DataViewPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Icon } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst DownloadButton = ({ filename = 'events.json' }) => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n\n  const content = JSON.stringify({\n    events,\n    eventTypes,\n    toponyms,\n    persons,\n  });\n\n  return (\n    <Button\n      download={filename}\n      href={URL.createObjectURL(\n        new Blob([content], { type: 'application/json' }),\n      )}\n    >\n      <Icon type=\"download\" />\n      Export to json\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","import React, { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Popconfirm, Table } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst dateFormatter = date =>\n  date.toLocaleString('ru', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\nconst typeFormatter = type => type.type;\nconst personsFormatter = persons =>\n  persons\n    .map(person => `${person.surname} ${person.name} ${person.patron}`)\n    .join();\nconst toponymsFormatter = toponyms =>\n  toponyms.map(toponym => toponym.name).join();\n\nconst startDateSorter = (a, b) => a.startDate - b.startDate;\n\nconst endDateSorter = (a, b) => a.endDate - b.endDate;\n\nconst EditorTable = ({ onAdd, onSelect, deleteRow }) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const events = useSelector(eventsSelector);\n\n  const eventsWithNestedData = useMemo(\n    () =>\n      events.map(event => ({\n        ...event,\n        type: eventTypes.find(type => type.id === event.type),\n        persons: event.persons\n          ? event.persons.map(personId =>\n              persons.find(person => person.id === personId),\n            )\n          : [],\n        toponyms: event.toponyms\n          ? event.toponyms.map(toponymId =>\n              toponyms.find(toponym => toponym.id === toponymId),\n            )\n          : [],\n      })),\n    [eventTypes, persons, toponyms, events],\n  );\n\n  const onRow = useCallback(\n    record => ({\n      onClick: onSelect ? () => onSelect(record) : undefined,\n    }),\n    [onSelect],\n  );\n\n  const renderDeleteButton = (_, record) => (\n    <Popconfirm\n      title=\"Вы уверены?\"\n      onConfirm={event => {\n        event.stopPropagation();\n        deleteRow(record);\n      }}\n      onCancel={event => {\n        event.stopPropagation();\n      }}\n      okText=\"Да\"\n      cancelText=\"Нет\"\n    >\n      <Button\n        type=\"link\"\n        onClick={event => {\n          event.stopPropagation();\n        }}\n      >\n        Удалить\n      </Button>\n    </Popconfirm>\n  );\n\n  const renderTitle = useCallback(\n    () => (\n      <Button type=\"primary\" onClick={onAdd}>\n        Добавить\n      </Button>\n    ),\n    [onAdd],\n  );\n\n  return (\n    <Table\n      dataSource={eventsWithNestedData}\n      rowKey={event => event.id}\n      onRow={onRow}\n      title={renderTitle}\n    >\n      <Table.Column title=\"Название\" dataIndex=\"name\" width=\"35%\" />\n      <Table.Column\n        title=\"Дата начала\"\n        dataIndex=\"startDate\"\n        width=\"10%\"\n        sorter={startDateSorter}\n        render={dateFormatter}\n      />\n      <Table.Column\n        title=\"Дата окончания\"\n        dataIndex=\"endDate\"\n        width=\"10%\"\n        sorter={endDateSorter}\n        render={dateFormatter}\n      />\n      <Table.Column\n        title=\"Тип\"\n        dataIndex=\"type\"\n        width=\"10%\"\n        filters={eventTypes.map(eventType => ({\n          value: eventType.id,\n          text: eventType.type,\n        }))}\n        onFilter={(value, record) => record.type.id === value}\n        render={typeFormatter}\n      />\n      <Table.Column\n        title=\"Действующие лица\"\n        dataIndex=\"persons\"\n        width=\"15%\"\n        render={personsFormatter}\n      />\n      <Table.Column\n        title=\"Топонимы\"\n        dataIndex=\"toponyms\"\n        width=\"15%\"\n        render={toponymsFormatter}\n      />\n      <Table.Column title=\"\" key=\"delete\" render={renderDeleteButton} />\n    </Table>\n  );\n};\n\nexport default EditorTable;\n","import React, { forwardRef, useCallback, useMemo, useState } from 'react';\nimport { debounce, uniq } from 'lodash-es';\nimport { Select } from 'antd';\n\nconst idSelector = option => option.id;\nconst DEFAULT_NAME_SELECTOR = option => option.name;\nconst DEFAULT_VALUE = [];\n\nconst LazySelectSearch = forwardRef(\n  (\n    {\n      allOptions,\n      value = DEFAULT_VALUE,\n      onChange,\n      placeholder,\n      count = 5,\n      keySelector = idSelector,\n      valueSelector = idSelector,\n      nameSelector = DEFAULT_NAME_SELECTOR,\n    },\n    ref,\n  ) => {\n    const [filteredOptions, setFilteredOptions] = useState([]);\n    const onSearch = useCallback(\n      debounce(inputValue => {\n        setFilteredOptions(\n          allOptions.filter(option =>\n            nameSelector(option)\n              .toLowerCase()\n              .includes(inputValue.toLocaleLowerCase()),\n          ),\n        );\n      }, 300),\n      [allOptions],\n    );\n\n    const onBlur = useCallback(() => {\n      setFilteredOptions([]);\n    }, []);\n\n    const onChangeHandler = useCallback(\n      newValue => {\n        setFilteredOptions([]);\n        onChange(newValue);\n      },\n      [onChange],\n    );\n\n    const mappedValues = useMemo(\n      () => value.map(v => allOptions.find(p => valueSelector(p) === v)),\n      [allOptions, value, valueSelector],\n    );\n\n    const options = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.slice(0, count)\n          : uniq([...allOptions.slice(0, count), ...mappedValues]),\n      [allOptions, count, filteredOptions, mappedValues],\n    );\n    const hidedOptionsCount = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.length - count\n          : allOptions.length - options.length,\n      [allOptions, count, filteredOptions, options.length],\n    );\n\n    return (\n      <Select\n        ref={ref}\n        placeholder={placeholder}\n        mode=\"multiple\"\n        filterOption={false}\n        onSearch={onSearch}\n        onChange={onChangeHandler}\n        onBlur={onBlur}\n        value={value}\n      >\n        {options.map(option => (\n          <Select.Option\n            key={keySelector(option)}\n            value={valueSelector(option)}\n          >\n            {nameSelector(option)}\n          </Select.Option>\n        ))}\n        {hidedOptionsCount > 0 && (\n          <Select.Option\n            key=\"__hidedOptionsCount__\"\n            value=\"__hidedOptionsCount__\"\n            disabled\n          >\n            Еще {hidedOptionsCount} вариантов\n          </Select.Option>\n        )}\n      </Select>\n    );\n  },\n);\n\nexport default LazySelectSearch;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { pick } from 'lodash-es';\nimport { Button, DatePicker, Drawer, Form, Input, Row, Select } from 'antd';\nimport LazySelectSearch from '../../components/LazySelectSearch';\nimport {\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst dateFormat = 'DD.MM.YYYY';\n\nconst rules = {\n  name: {\n    rules: [{ required: true }],\n  },\n  startDate: {\n    rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n  },\n  endDate: {\n    rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n  },\n  type: {\n    rules: [{ required: true }],\n  },\n  persons: {\n    rules: [{ type: 'array' }],\n  },\n  toponyms: {\n    rules: [{ type: 'array' }],\n  },\n};\n\nconst EventForm = ({\n  event,\n  onSubmit,\n  form: { getFieldDecorator, setFieldsValue, validateFields },\n  visible,\n  onClose,\n}) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const persons = useSelector(personsSelector);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (!err) {\n        onSubmit({ id: event ? event.id : null, ...values });\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (event) {\n      setFieldsValue(pick(event, Object.keys(rules)));\n    }\n  }, [event, setFieldsValue]);\n\n  return (\n    <Drawer\n      title=\"Редактирование события\"\n      visible={visible}\n      onClose={onClose}\n      placement=\"right\"\n      width={450}\n      closable\n      destroyOnClose\n    >\n      <Form layout=\"vertical\">\n        <Row>\n          <Form.Item label=\"Название\">\n            {getFieldDecorator(\n              'name',\n              rules.name,\n            )(<Input.TextArea rows={4} placeholder=\"Название\" />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Дата начала\">\n            {getFieldDecorator(\n              'startDate',\n              rules.startDate,\n            )(<DatePicker format={dateFormat} />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Дата окончания\">\n            {getFieldDecorator(\n              'endDate',\n              rules.endDate,\n            )(<DatePicker format={dateFormat} />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Тип\">\n            {getFieldDecorator(\n              'type',\n              rules.type,\n            )(\n              <Select placeholder=\"Выберите тип события\">\n                {eventTypes.map(eventType => (\n                  <Select.Option key={eventType.id} value={eventType.id}>\n                    {eventType.type}\n                  </Select.Option>\n                ))}\n              </Select>,\n            )}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Топонимы\">\n            {getFieldDecorator(\n              'toponyms',\n              rules.toponyms,\n            )(\n              <LazySelectSearch\n                allOptions={toponyms}\n                placeholder=\"Выберите топонимы\"\n              />,\n            )}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Действующие лица\">\n            {getFieldDecorator(\n              'persons',\n              rules.persons,\n            )(\n              <LazySelectSearch\n                allOptions={persons}\n                nameSelector={p => `${p.surname} ${p.name} ${p.patron}`}\n                placeholder=\"Выберите действующих лиц\"\n              />,\n            )}\n          </Form.Item>\n        </Row>\n        <div\n          style={{\n            position: 'absolute',\n            right: 0,\n            bottom: 0,\n            width: '100%',\n            borderTop: '1px solid #e9e9e9',\n            padding: '10px 16px',\n            background: '#fff',\n            textAlign: 'right',\n          }}\n        >\n          <Button onClick={onSubmitHandler} type=\"primary\">\n            Сохранить\n          </Button>\n        </div>\n      </Form>\n    </Drawer>\n  );\n};\n\nconst WrappedEventForm = Form.create()(EventForm);\n\nexport default WrappedEventForm;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Layout, PageHeader } from 'antd';\nimport moment from 'moment';\nimport DownloadButton from './DownloadButton';\nimport EditorTable from './EditorTable';\nimport EventForm from './EventForm';\nimport { addEvent, deleteEvent, editEvent } from '../../ducks';\n\nconst DataEditorPage = () => {\n  const dispatch = useDispatch();\n  const [isAddFormVisible, setAddFormVisible] = useState(false);\n  const [event, setEvent] = useState(null);\n  const onSelect = useCallback(\n    value =>\n      setEvent({\n        ...value,\n        startDate: moment(value.startDate),\n        endDate: moment(value.endDate),\n        type: value.type.id,\n        toponyms: value.toponyms.map(toponym => toponym.id),\n        persons: value.persons.map(person => person.id),\n      }),\n    [],\n  );\n\n  const closeForm = useCallback(() => {\n    if (isAddFormVisible) {\n      setAddFormVisible(false);\n    } else {\n      setEvent(null);\n    }\n  }, [isAddFormVisible]);\n\n  const changeEvent = useCallback(\n    value => {\n      dispatch(\n        editEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n    },\n    [dispatch, closeForm],\n  );\n\n  const onDelete = useCallback(\n    value => {\n      dispatch(deleteEvent(value));\n    },\n    [dispatch],\n  );\n\n  const createEvent = useCallback(\n    value => {\n      dispatch(\n        addEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n    },\n    [closeForm, dispatch],\n  );\n\n  const showAddForm = useCallback(() => {\n    setAddFormVisible(true);\n  }, []);\n\n  return (\n    <Layout>\n      <PageHeader\n        ghost={false}\n        title=\"Редактирование данных\"\n        extra={<DownloadButton />}\n      />\n      <Layout.Content>\n        <EditorTable\n          onAdd={showAddForm}\n          onSelect={onSelect}\n          deleteRow={onDelete}\n        />\n        <EventForm\n          event={event}\n          visible={event !== null || isAddFormVisible}\n          onClose={closeForm}\n          onSubmit={isAddFormVisible ? createEvent : changeEvent}\n        />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataEditorPage;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Icon, Layout, Menu } from 'antd';\nimport { loadEvents } from '../ducks';\nimport DataViewPage from './DataViewPage';\nimport DataEditorPage from './DataEditorPage';\nimport { editorDataPage, viewDataPage } from './routes';\n\nconst ROUTES = [viewDataPage, editorDataPage];\n\nconst FULL_SIDER_WIDTH = 240;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const selectedMenuKeys = useMemo(\n    () => [ROUTES.find(route => route === pathname)],\n    [pathname],\n  );\n\n  useEffect(() => {\n    dispatch(loadEvents());\n  }, [dispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }} hasSider>\n      <Layout.Sider\n        theme=\"dark\"\n        collapsible\n        width={FULL_SIDER_WIDTH}\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedMenuKeys}>\n          <Menu.Item key={viewDataPage}>\n            <Link to={viewDataPage}>\n              <Icon type=\"pie-chart\" />\n              <span>Просмотр данных</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={editorDataPage}>\n            <Link to={editorDataPage}>\n              <Icon type=\"edit\" />\n              <span>Редактирование данных</span>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout\n        style={{\n          marginLeft: collapsed ? 80 : FULL_SIDER_WIDTH,\n          transition: 'margin 0.2s',\n        }}\n      >\n        <Layout.Content>\n          <Switch>\n            <Route path={viewDataPage} component={DataViewPage} />\n            <Route path={editorDataPage} component={DataEditorPage} />\n            <Redirect to={viewDataPage} />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","export const viewDataPage = '/view';\nexport const editorDataPage = '/editor';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App/App';\nimport './index.css';\n\nconst renderApp = () => (\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n);\n\nReactDOM.render(renderApp(), document.getElementById('root'));\n"],"sourceRoot":""}