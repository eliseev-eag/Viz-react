{"version":3,"sources":["ducks.js","store.js","selectors.js","App/DataViewPage/EventsTimeline.js","App/DataViewPage/DataViewPage.js","App/DataEditorPage/DownloadButton.js","App/DataEditorPage/EditorTable.js","components/LazySelectSearch.js","App/DataEditorPage/EventForm.js","App/DataEditorPage/DataEditorPage.js","App/App.js","App/routes.js","index.js"],"names":["loadEventsRequest","createAction","loadEventsSuccess","loadEventsFailure","changeTimelineRange","editEvent","deleteEvent","addEvent","timelineDefaultState","start","Date","end","reducer","combineReducers","requestWorking","handleActions","combineActions","eventTypes","state","data","payload","persons","toponyms","events","orderBy","map","event","startDate","endDate","id","filter","uniqueId","errorOccured","timeline","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","eventsSelector","toponymsSelector","personsSelector","eventTypesSelector","TIMELINE_OPTIONS","align","minHeight","maxHeight","type","tooltip","followMouse","overflowMethod","snap","orientation","axis","zoomMin","eventTypesToGroupSelector","flow","eventType","content","eventsToTimelineItemsSelector","slice","name","duration","group","EventsTimeline","dispatch","useDispatch","items","useSelector","groups","onRangeChangedHandler","useCallback","length","options","rangechangedHandler","DataViewPage","ghost","title","Content","DownloadButton","filename","JSON","stringify","download","href","URL","createObjectURL","Blob","dateFormatter","date","toLocaleString","year","month","day","typeFormatter","personsFormatter","person","surname","patron","join","toponymsFormatter","toponym","startDateSorter","a","b","endDateSorter","EditorTable","onAdd","onSelect","deleteRow","useState","setFilter","eventsWithNestedData","useMemo","find","personId","toponymId","it","toLowerCase","includes","onRow","record","onClick","undefined","onSearch","debounce","value","style","display","flexDirection","justifyContent","alignItems","padding","Search","placeholder","width","dataSource","rowKey","Column","dataIndex","sorter","render","filters","text","onFilter","key","_","onConfirm","stopPropagation","onCancel","okText","cancelText","idSelector","option","DEFAULT_NAME_SELECTOR","DEFAULT_VALUE","LazySelectSearch","forwardRef","ref","allOptions","onChange","count","keySelector","valueSelector","nameSelector","filteredOptions","setFilteredOptions","inputValue","toLocaleLowerCase","onBlur","onChangeHandler","newValue","mappedValues","v","p","uniq","hidedOptionsCount","mode","filterOption","Option","disabled","rules","required","message","WrappedEventForm","Form","create","onSubmit","form","getFieldDecorator","setFieldsValue","validateFields","visible","onClose","useEffect","pick","Object","keys","placement","closable","destroyOnClose","layout","Item","label","TextArea","rows","format","position","right","bottom","borderTop","background","textAlign","e","preventDefault","err","values","DataEditorPage","isAddFormVisible","setAddFormVisible","setEvent","moment","closeForm","changeEvent","toDate","onDelete","createEvent","showAddForm","extra","ROUTES","App","collapsed","setCollapsed","pathname","useLocation","selectedMenuKeys","route","eventsData","hasSider","Sider","theme","collapsible","onCollapse","overflow","height","left","selectedKeys","to","marginLeft","transition","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f32fdb86.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { combineActions, createAction, handleActions } from 'redux-actions';\nimport { orderBy, uniqueId } from 'lodash-es';\n\nconst loadEventsRequest = createAction('loadEventsRequest');\nconst loadEventsSuccess = createAction('loadEventsSuccess');\nconst loadEventsFailure = createAction('loadEventsFailure');\n\nexport const changeTimelineRange = createAction('changeTimelineRange');\n\nexport const loadEvents = () => async dispatch => {\n  dispatch(loadEventsRequest());\n  try {\n    const eventsData = await import('./events.json');\n    dispatch(loadEventsSuccess(eventsData));\n  } catch (error) {\n    dispatch(loadEventsFailure(error));\n  }\n};\n\nexport const editEvent = createAction('editEvent');\nexport const deleteEvent = createAction('deleteEvent');\nexport const addEvent = createAction('addEvent');\n\nconst timelineDefaultState = {\n  start: new Date(100, 0, 0),\n  end: new Date(),\n};\n\nexport const reducer = combineReducers({\n  requestWorking: handleActions(\n    {\n      [loadEventsRequest]: () => true,\n      [combineActions(loadEventsSuccess, loadEventsFailure)]: () => false,\n    },\n    false,\n  ),\n  eventTypes: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.eventTypes,\n    },\n    [],\n  ),\n  persons: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.persons,\n    },\n    [],\n  ),\n  toponyms: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.toponyms,\n    },\n    [],\n  ),\n  events: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) =>\n        orderBy(\n          data.payload.events.map(event => ({\n            ...event,\n            startDate: new Date(event.startDate),\n            endDate: new Date(event.endDate),\n          })),\n          event => event.endDate - event.startDate,\n          'desc',\n        ),\n      [editEvent]: (state, data) =>\n        state.map(event =>\n          event.id === data.payload.id ? data.payload : event,\n        ),\n      [deleteEvent]: (state, data) =>\n        state.filter(event => event.id !== data.payload.id),\n      [addEvent]: (state, data) => [\n        ...state,\n        { ...data.payload, id: uniqueId() },\n      ],\n    },\n    [],\n  ),\n  errorOccured: handleActions(\n    {\n      [loadEventsFailure]: () => true,\n    },\n    false,\n  ),\n  timeline: handleActions(\n    {\n      [changeTimelineRange]: (state, { payload: { start, end } }) => ({\n        start,\n        end,\n      }),\n    },\n    timelineDefaultState,\n  ),\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './ducks';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","export const eventsSelector = state => state.events;\nexport const toponymsSelector = state => state.toponyms;\nexport const personsSelector = state => state.persons;\nexport const eventTypesSelector = state => state.eventTypes;\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { flow } from 'lodash-es';\nimport Timeline from 'react-visjs-timeline';\nimport { changeTimelineRange } from '../../ducks';\nimport { eventsSelector, eventTypesSelector } from '../../selectors';\n\nconst TIMELINE_OPTIONS = {\n  align: 'center',\n  minHeight: '400px',\n  maxHeight: '400px',\n  type: 'range',\n  tooltip: {\n    followMouse: true,\n    overflowMethod: 'cap',\n  },\n  snap: null,\n  orientation: { axis: 'both' },\n  zoomMin: 1000 * 60 * 60 * 24 * 5,\n};\n\nconst eventTypesToGroupSelector = flow(eventTypesSelector, eventTypes =>\n  eventTypes.map(eventType => ({\n    id: eventType.id,\n    content: eventType.type,\n  })),\n);\n\nconst eventsToTimelineItemsSelector = flow(eventsSelector, events =>\n  events.slice(0, 10).map(event => ({\n    start: event.startDate,\n    end: event.endDate,\n    content: event.name,\n    duration: event.endDate - event.startDate,\n    group: event.type,\n    type:\n      event.endDate - event.startDate <= 1000 * 60 * 60 * 24\n        ? 'point'\n        : 'range',\n  })),\n);\n\nconst EventsTimeline = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(eventsToTimelineItemsSelector);\n  const groups = useSelector(eventTypesToGroupSelector);\n\n  const onRangeChangedHandler = useCallback(\n    ({ start, end }) => {\n      dispatch(changeTimelineRange({ start, end }));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div>\n      {items && items.length > 0 && (\n        <Timeline\n          options={TIMELINE_OPTIONS}\n          items={items}\n          groups={groups}\n          rangechangedHandler={onRangeChangedHandler}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default EventsTimeline;\n","import React from 'react';\nimport { Layout, PageHeader } from 'antd';\nimport EventsTimeline from './EventsTimeline';\n\nconst DataViewPage = () => (\n  <Layout>\n    <PageHeader ghost={false} title=\"Просмотр данных\" />\n    <Layout.Content>\n      <EventsTimeline />\n    </Layout.Content>\n  </Layout>\n);\n\nexport default DataViewPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Icon } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst DownloadButton = ({ filename = 'events.json' }) => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n\n  const content = JSON.stringify({\n    events,\n    eventTypes,\n    toponyms,\n    persons,\n  });\n\n  return (\n    <Button\n      download={filename}\n      href={URL.createObjectURL(\n        new Blob([content], { type: 'application/json' }),\n      )}\n    >\n      <Icon type=\"download\" />\n      Export to json\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { debounce } from 'lodash-es';\nimport { Button, Input, Popconfirm, Table } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst dateFormatter = date =>\n  date.toLocaleString('ru', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\nconst typeFormatter = type => type.type;\nconst personsFormatter = persons =>\n  persons\n    .map(person => `${person.surname} ${person.name} ${person.patron}`)\n    .join();\nconst toponymsFormatter = toponyms =>\n  toponyms.map(toponym => toponym.name).join();\n\nconst startDateSorter = (a, b) => a.startDate - b.startDate;\n\nconst endDateSorter = (a, b) => a.endDate - b.endDate;\n\nconst EditorTable = ({ onAdd, onSelect, deleteRow }) => {\n  const [filter, setFilter] = useState('');\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const events = useSelector(eventsSelector);\n\n  const eventsWithNestedData = useMemo(\n    () =>\n      events\n        .map(event => ({\n          ...event,\n          type: eventTypes.find(type => type.id === event.type),\n          persons: event.persons\n            ? event.persons.map(personId =>\n                persons.find(person => person.id === personId),\n              )\n            : [],\n          toponyms: event.toponyms\n            ? event.toponyms.map(toponymId =>\n                toponyms.find(toponym => toponym.id === toponymId),\n              )\n            : [],\n        }))\n        .filter(it => it.name.toLowerCase().includes(filter.toLowerCase())),\n    [events, eventTypes, persons, toponyms, filter],\n  );\n\n  const onRow = useCallback(\n    record => ({\n      onClick: onSelect ? () => onSelect(record) : undefined,\n    }),\n    [onSelect],\n  );\n\n  const onSearch = useCallback(\n    debounce(value => setFilter(value)),\n    [],\n  );\n\n  const renderDeleteButton = (_, record) => (\n    <Popconfirm\n      title=\"Вы уверены?\"\n      onConfirm={event => {\n        event.stopPropagation();\n        deleteRow(record);\n      }}\n      onCancel={event => {\n        event.stopPropagation();\n      }}\n      okText=\"Да\"\n      cancelText=\"Нет\"\n    >\n      <Button\n        type=\"link\"\n        onClick={event => {\n          event.stopPropagation();\n        }}\n      >\n        Удалить\n      </Button>\n    </Popconfirm>\n  );\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '10px 20px',\n        }}\n      >\n        <Button type=\"primary\" onClick={onAdd}>\n          Добавить\n        </Button>\n        <Input.Search\n          placeholder=\"Введите значение для поиска\"\n          onSearch={onSearch}\n          style={{ width: 400 }}\n        />\n      </div>\n      <Table\n        dataSource={eventsWithNestedData}\n        rowKey={event => event.id}\n        onRow={onRow}\n      >\n        <Table.Column title=\"Название\" dataIndex=\"name\" width=\"35%\" />\n        <Table.Column\n          title=\"Дата начала\"\n          dataIndex=\"startDate\"\n          width=\"10%\"\n          sorter={startDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Дата окончания\"\n          dataIndex=\"endDate\"\n          width=\"10%\"\n          sorter={endDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Тип\"\n          dataIndex=\"type\"\n          width=\"10%\"\n          filters={eventTypes.map(eventType => ({\n            value: eventType.id,\n            text: eventType.type,\n          }))}\n          onFilter={(value, record) => record.type.id === value}\n          render={typeFormatter}\n        />\n        <Table.Column\n          title=\"Действующие лица\"\n          dataIndex=\"persons\"\n          width=\"15%\"\n          render={personsFormatter}\n        />\n        <Table.Column\n          title=\"Топонимы\"\n          dataIndex=\"toponyms\"\n          width=\"15%\"\n          render={toponymsFormatter}\n        />\n        <Table.Column title=\"\" key=\"delete\" render={renderDeleteButton} />\n      </Table>\n    </div>\n  );\n};\n\nexport default EditorTable;\n","import React, { forwardRef, useCallback, useMemo, useState } from 'react';\nimport { debounce, uniq } from 'lodash-es';\nimport { Select } from 'antd';\n\nconst idSelector = option => option.id;\nconst DEFAULT_NAME_SELECTOR = option => option.name;\nconst DEFAULT_VALUE = [];\n\nconst LazySelectSearch = forwardRef(\n  (\n    {\n      allOptions,\n      value = DEFAULT_VALUE,\n      onChange,\n      placeholder,\n      count = 5,\n      keySelector = idSelector,\n      valueSelector = idSelector,\n      nameSelector = DEFAULT_NAME_SELECTOR,\n    },\n    ref,\n  ) => {\n    const [filteredOptions, setFilteredOptions] = useState([]);\n    const onSearch = useCallback(\n      debounce(inputValue => {\n        setFilteredOptions(\n          allOptions.filter(option =>\n            nameSelector(option)\n              .toLowerCase()\n              .includes(inputValue.toLocaleLowerCase()),\n          ),\n        );\n      }, 300),\n      [allOptions],\n    );\n\n    const onBlur = useCallback(() => {\n      setFilteredOptions([]);\n    }, []);\n\n    const onChangeHandler = useCallback(\n      newValue => {\n        setFilteredOptions([]);\n        onChange(newValue);\n      },\n      [onChange],\n    );\n\n    const mappedValues = useMemo(\n      () => value.map(v => allOptions.find(p => valueSelector(p) === v)),\n      [allOptions, value, valueSelector],\n    );\n\n    const options = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.slice(0, count)\n          : uniq([...allOptions.slice(0, count), ...mappedValues]),\n      [allOptions, count, filteredOptions, mappedValues],\n    );\n    const hidedOptionsCount = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.length - count\n          : allOptions.length - options.length,\n      [allOptions, count, filteredOptions, options.length],\n    );\n\n    return (\n      <Select\n        ref={ref}\n        placeholder={placeholder}\n        mode=\"multiple\"\n        filterOption={false}\n        onSearch={onSearch}\n        onChange={onChangeHandler}\n        onBlur={onBlur}\n        value={value}\n      >\n        {options.map(option => (\n          <Select.Option\n            key={keySelector(option)}\n            value={valueSelector(option)}\n          >\n            {nameSelector(option)}\n          </Select.Option>\n        ))}\n        {hidedOptionsCount > 0 && (\n          <Select.Option\n            key=\"__hidedOptionsCount__\"\n            value=\"__hidedOptionsCount__\"\n            disabled\n          >\n            Еще {hidedOptionsCount} вариантов\n          </Select.Option>\n        )}\n      </Select>\n    );\n  },\n);\n\nexport default LazySelectSearch;\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { pick } from 'lodash-es';\nimport { Button, DatePicker, Drawer, Form, Input, Row, Select } from 'antd';\nimport LazySelectSearch from '../../components/LazySelectSearch';\nimport {\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from '../../selectors';\n\nconst dateFormat = 'DD.MM.YYYY';\n\nconst rules = {\n  name: {\n    rules: [{ required: true }],\n  },\n  startDate: {\n    rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n  },\n  endDate: {\n    rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n  },\n  type: {\n    rules: [{ required: true }],\n  },\n  persons: {\n    rules: [{ type: 'array' }],\n  },\n  toponyms: {\n    rules: [{ type: 'array' }],\n  },\n};\n\nconst EventForm = ({\n  event,\n  onSubmit,\n  form: { getFieldDecorator, setFieldsValue, validateFields },\n  visible,\n  onClose,\n}) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const persons = useSelector(personsSelector);\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    validateFields((err, values) => {\n      if (!err) {\n        onSubmit({ id: event ? event.id : null, ...values });\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (event) {\n      setFieldsValue(pick(event, Object.keys(rules)));\n    }\n  }, [event, setFieldsValue]);\n\n  return (\n    <Drawer\n      title=\"Редактирование события\"\n      visible={visible}\n      onClose={onClose}\n      placement=\"right\"\n      width={450}\n      closable\n      destroyOnClose\n    >\n      <Form layout=\"vertical\">\n        <Row>\n          <Form.Item label=\"Название\">\n            {getFieldDecorator(\n              'name',\n              rules.name,\n            )(<Input.TextArea rows={4} placeholder=\"Название\" />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Дата начала\">\n            {getFieldDecorator(\n              'startDate',\n              rules.startDate,\n            )(<DatePicker format={dateFormat} />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Дата окончания\">\n            {getFieldDecorator(\n              'endDate',\n              rules.endDate,\n            )(<DatePicker format={dateFormat} />)}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Тип\">\n            {getFieldDecorator(\n              'type',\n              rules.type,\n            )(\n              <Select placeholder=\"Выберите тип события\">\n                {eventTypes.map(eventType => (\n                  <Select.Option key={eventType.id} value={eventType.id}>\n                    {eventType.type}\n                  </Select.Option>\n                ))}\n              </Select>,\n            )}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Топонимы\">\n            {getFieldDecorator(\n              'toponyms',\n              rules.toponyms,\n            )(\n              <LazySelectSearch\n                allOptions={toponyms}\n                placeholder=\"Выберите топонимы\"\n              />,\n            )}\n          </Form.Item>\n        </Row>\n        <Row>\n          <Form.Item label=\"Действующие лица\">\n            {getFieldDecorator(\n              'persons',\n              rules.persons,\n            )(\n              <LazySelectSearch\n                allOptions={persons}\n                nameSelector={p => `${p.surname} ${p.name} ${p.patron}`}\n                placeholder=\"Выберите действующих лиц\"\n              />,\n            )}\n          </Form.Item>\n        </Row>\n        <div\n          style={{\n            position: 'absolute',\n            right: 0,\n            bottom: 0,\n            width: '100%',\n            borderTop: '1px solid #e9e9e9',\n            padding: '10px 16px',\n            background: '#fff',\n            textAlign: 'right',\n          }}\n        >\n          <Button onClick={onSubmitHandler} type=\"primary\">\n            Сохранить\n          </Button>\n        </div>\n      </Form>\n    </Drawer>\n  );\n};\n\nconst WrappedEventForm = Form.create()(EventForm);\n\nexport default WrappedEventForm;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Layout, PageHeader } from 'antd';\nimport moment from 'moment';\nimport { addEvent, deleteEvent, editEvent } from '../../ducks';\nimport DownloadButton from './DownloadButton';\nimport EditorTable from './EditorTable';\nimport EventForm from './EventForm';\n\nconst DataEditorPage = () => {\n  const dispatch = useDispatch();\n  const [isAddFormVisible, setAddFormVisible] = useState(false);\n  const [event, setEvent] = useState(null);\n  const onSelect = useCallback(\n    value =>\n      setEvent({\n        ...value,\n        startDate: moment(value.startDate),\n        endDate: moment(value.endDate),\n        type: value.type.id,\n        toponyms: value.toponyms.map(toponym => toponym.id),\n        persons: value.persons.map(person => person.id),\n      }),\n    [],\n  );\n\n  const closeForm = useCallback(() => {\n    if (isAddFormVisible) {\n      setAddFormVisible(false);\n    } else {\n      setEvent(null);\n    }\n  }, [isAddFormVisible]);\n\n  const changeEvent = useCallback(\n    value => {\n      dispatch(\n        editEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n    },\n    [dispatch, closeForm],\n  );\n\n  const onDelete = useCallback(\n    value => {\n      dispatch(deleteEvent(value));\n    },\n    [dispatch],\n  );\n\n  const createEvent = useCallback(\n    value => {\n      dispatch(\n        addEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n    },\n    [closeForm, dispatch],\n  );\n\n  const showAddForm = useCallback(() => {\n    setAddFormVisible(true);\n  }, []);\n\n  return (\n    <Layout>\n      <PageHeader\n        ghost={false}\n        title=\"Редактирование данных\"\n        extra={<DownloadButton />}\n      />\n      <Layout.Content>\n        <EditorTable\n          onAdd={showAddForm}\n          onSelect={onSelect}\n          deleteRow={onDelete}\n        />\n        <EventForm\n          event={event}\n          visible={event !== null || isAddFormVisible}\n          onClose={closeForm}\n          onSubmit={isAddFormVisible ? createEvent : changeEvent}\n        />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataEditorPage;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Icon, Layout, Menu } from 'antd';\nimport { loadEvents } from '../ducks';\nimport DataViewPage from './DataViewPage';\nimport DataEditorPage from './DataEditorPage';\nimport { editorDataPage, viewDataPage } from './routes';\n\nconst ROUTES = [viewDataPage, editorDataPage];\n\nconst FULL_SIDER_WIDTH = 240;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const selectedMenuKeys = useMemo(\n    () => [ROUTES.find(route => route === pathname)],\n    [pathname],\n  );\n\n  useEffect(() => {\n    dispatch(loadEvents());\n  }, [dispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }} hasSider>\n      <Layout.Sider\n        theme=\"dark\"\n        collapsible\n        width={FULL_SIDER_WIDTH}\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedMenuKeys}>\n          <Menu.Item key={viewDataPage}>\n            <Link to={viewDataPage}>\n              <Icon type=\"pie-chart\" />\n              <span>Просмотр данных</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={editorDataPage}>\n            <Link to={editorDataPage}>\n              <Icon type=\"edit\" />\n              <span>Редактирование данных</span>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout\n        style={{\n          marginLeft: collapsed ? 80 : FULL_SIDER_WIDTH,\n          transition: 'margin 0.2s',\n        }}\n      >\n        <Layout.Content>\n          <Switch>\n            <Route path={viewDataPage} component={DataViewPage} />\n            <Route path={editorDataPage} component={DataEditorPage} />\n            <Redirect to={viewDataPage} />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","export const viewDataPage = '/view';\nexport const editorDataPage = '/editor';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App/App';\nimport './index.css';\n\nconst renderApp = () => (\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n);\n\nReactDOM.render(renderApp(), document.getElementById('root'));\n"],"sourceRoot":""}