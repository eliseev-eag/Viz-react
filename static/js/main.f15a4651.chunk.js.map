{"version":3,"sources":["ducks.js","store.js","selectors.js","App/DataViewPage/EventsTimeline.js","App/DataViewPage/DataViewPage.js","App/DataEditorPage/DownloadButton.js","App/DataEditorPage/EditorTable.js","components/SelectBox.js","components/LazySelectSearch.js","components/WrappedComponents.js","App/DataEditorPage/EventForm.js","App/DataEditorPage/DataEditorPage.js","App/App.js","App/routes.js","index.js"],"names":["loadEventsRequest","createAction","loadEventsSuccess","loadEventsFailure","editEvent","deleteEvent","addEvent","combineReducers","isFetching","handleActions","combineActions","error","state","data","eventTypes","payload","persons","toponyms","events","orderBy","map","event","startDate","Date","endDate","id","filter","uniqueId","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","eventsSelector","toponymsSelector","personsSelector","eventTypesSelector","isFetchingSelector","errorSelector","TIMELINE_OPTIONS","align","minHeight","maxHeight","type","tooltip","followMouse","overflowMethod","snap","orientation","axis","zoomMin","eventTypesToGroupSelector","flow","eventType","content","eventsToTimelineItemsSelector","slice","start","end","name","duration","group","EventsTimeline","items","useSelector","groups","length","options","DataViewPage","isFethcing","ghost","title","Content","style","display","alignItems","justifyContent","size","message","description","showIcon","DownloadButton","filename","JSON","stringify","download","href","URL","createObjectURL","Blob","dateFormatter","date","toLocaleString","year","month","day","typeFormatter","personsFormatter","person","surname","patron","join","toponymsFormatter","toponym","startDateSorter","a","b","endDateSorter","EditorTable","onAdd","onSelect","deleteRow","useState","setFilter","eventsWithNestedData","useMemo","find","personId","toponymId","it","toLowerCase","includes","onRow","useCallback","record","onClick","undefined","onSearch","debounce","value","flexDirection","padding","Search","placeholder","width","dataSource","rowKey","Column","dataIndex","sorter","render","filters","text","onFilter","key","_","onConfirm","stopPropagation","onCancel","okText","cancelText","ID_FACTORY","NAME_FACTORY","OPTIONS_DEFAULT_VALUE","SelectBox","optionKeyFactory","optionValueFactory","optionNameFactory","otherProps","option","Option","idSelector","DEFAULT_NAME_SELECTOR","DEFAULT_VALUE","LazySelectSearch","forwardRef","ref","allOptions","onChange","count","keySelector","valueSelector","nameSelector","filteredOptions","setFilteredOptions","inputValue","toLocaleLowerCase","onBlur","onChangeHandler","newValue","mappedValues","v","p","uniq","hidedOptionsCount","mode","filterOption","disabled","wrapInToField","Component","label","allowNull","format","identity","parse","input","meta","invalid","touched","Item","validateStatus","help","WrappedTextArea","Input","TextArea","WrappedDateBox","DatePicker","WrappedSelectBox","WrappedLazySelectSearch","EventForm","onSubmit","visible","onClose","placement","closable","destroyOnClose","initialValues","values","handleSubmit","layout","rows","position","right","bottom","borderTop","background","textAlign","htmlType","DataEditorPage","dispatch","useDispatch","isAddFormVisible","setAddFormVisible","setEvent","moment","closeForm","changeEvent","toDate","onDelete","createEvent","showAddForm","extra","ROUTES","App","collapsed","setCollapsed","pathname","useLocation","selectedMenuKeys","route","useEffect","eventsData","hasSider","Sider","theme","collapsible","onCollapse","overflow","height","left","selectedKeys","to","marginLeft","transition","path","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.f15a4651.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { combineActions, createAction, handleActions } from 'redux-actions';\nimport { orderBy, uniqueId } from 'lodash-es';\n\nconst loadEventsRequest = createAction('loadEventsRequest');\nconst loadEventsSuccess = createAction('loadEventsSuccess');\nconst loadEventsFailure = createAction('loadEventsFailure');\n\nexport const loadEvents = () => async dispatch => {\n  dispatch(loadEventsRequest());\n  try {\n    const eventsData = await import('./events.json');\n    dispatch(loadEventsSuccess(eventsData));\n  } catch (error) {\n    dispatch(loadEventsFailure(error));\n  }\n};\n\nexport const editEvent = createAction('editEvent');\nexport const deleteEvent = createAction('deleteEvent');\nexport const addEvent = createAction('addEvent');\n\nexport default combineReducers({\n  isFetching: handleActions(\n    {\n      [loadEventsRequest]: () => true,\n      [combineActions(loadEventsSuccess, loadEventsFailure)]: () => false,\n    },\n    false,\n  ),\n  error: handleActions(\n    {\n      [loadEventsRequest]: () => null,\n      [loadEventsFailure]: (state, data) => data,\n    },\n    null,\n  ),\n  eventTypes: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.eventTypes,\n    },\n    [],\n  ),\n  persons: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.persons,\n    },\n    [],\n  ),\n  toponyms: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) => data.payload.toponyms,\n    },\n    [],\n  ),\n  events: handleActions(\n    {\n      [loadEventsSuccess]: (state, data) =>\n        orderBy(\n          data.payload.events.map(event => ({\n            ...event,\n            startDate: new Date(event.startDate),\n            endDate: new Date(event.endDate),\n          })),\n          event => event.endDate - event.startDate,\n          'desc',\n        ),\n      [editEvent]: (state, data) =>\n        state.map(event =>\n          event.id === data.payload.id ? data.payload : event,\n        ),\n      [deleteEvent]: (state, data) =>\n        state.filter(event => event.id !== data.payload.id),\n      [addEvent]: (state, data) => [\n        ...state,\n        { ...data.payload, id: uniqueId() },\n      ],\n    },\n    [],\n  ),\n});\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './ducks';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk)),\n);\n\nexport default store;\n","export const eventsSelector = state => state.events;\nexport const toponymsSelector = state => state.toponyms;\nexport const personsSelector = state => state.persons;\nexport const eventTypesSelector = state => state.eventTypes;\nexport const isFetchingSelector = state => state.isFetching;\nexport const errorSelector = state => state.error;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { flow } from 'lodash-es';\nimport Timeline from 'react-visjs-timeline';\nimport { eventsSelector, eventTypesSelector } from 'selectors';\n\nconst TIMELINE_OPTIONS = {\n  align: 'center',\n  minHeight: '400px',\n  maxHeight: '400px',\n  type: 'range',\n  tooltip: {\n    followMouse: true,\n    overflowMethod: 'cap',\n  },\n  snap: null,\n  orientation: { axis: 'both' },\n  zoomMin: 1000 * 60 * 60 * 24 * 5,\n};\n\nconst eventTypesToGroupSelector = flow(eventTypesSelector, eventTypes =>\n  eventTypes.map(eventType => ({\n    id: eventType.id,\n    content: eventType.type,\n  })),\n);\n\nconst eventsToTimelineItemsSelector = flow(eventsSelector, events =>\n  events.slice(0, 10).map(event => ({\n    start: event.startDate,\n    end: event.endDate,\n    content: event.name,\n    duration: event.endDate - event.startDate,\n    group: event.type,\n    type:\n      event.endDate - event.startDate <= 1000 * 60 * 60 * 24\n        ? 'point'\n        : 'range',\n  })),\n);\n\nconst EventsTimeline = () => {\n  const items = useSelector(eventsToTimelineItemsSelector);\n  const groups = useSelector(eventTypesToGroupSelector);\n\n  return (\n    <div>\n      {items && items.length > 0 && (\n        <Timeline options={TIMELINE_OPTIONS} items={items} groups={groups} />\n      )}\n    </div>\n  );\n};\n\nexport default EventsTimeline;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Alert, Layout, PageHeader, Spin } from 'antd';\nimport { errorSelector, isFetchingSelector } from 'selectors';\nimport EventsTimeline from './EventsTimeline';\n\nconst DataViewPage = () => {\n  const isFethcing = useSelector(isFetchingSelector);\n  const error = useSelector(errorSelector);\n\n  return (\n    <Layout>\n      <PageHeader ghost={false} title=\"Просмотр данных\" />\n      <Layout.Content>\n        {isFethcing && (\n          <div\n            style={{\n              minHeight: 200,\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Spin size=\"large\" />\n          </div>\n        )}\n        {error && (\n          <Alert\n            message=\"Произошла ошибка\"\n            description={error}\n            type=\"error\"\n            showIcon\n          />\n        )}\n        {!isFethcing && !error && <EventsTimeline />}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataViewPage;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, Icon } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\n\nconst DownloadButton = ({ filename = 'events.json' }) => {\n  const events = useSelector(eventsSelector);\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n\n  const content = JSON.stringify({\n    events,\n    eventTypes,\n    toponyms,\n    persons,\n  });\n\n  return (\n    <Button\n      download={filename}\n      href={URL.createObjectURL(\n        new Blob([content], { type: 'application/json' }),\n      )}\n    >\n      <Icon type=\"download\" />\n      Export to json\n    </Button>\n  );\n};\n\nexport default DownloadButton;\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { debounce } from 'lodash-es';\nimport { Button, Input, Popconfirm, Table } from 'antd';\nimport {\n  eventsSelector,\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\n\nconst dateFormatter = date =>\n  date.toLocaleString('ru', {\n    year: 'numeric',\n    month: 'numeric',\n    day: 'numeric',\n  });\nconst typeFormatter = type => type.type;\nconst personsFormatter = persons =>\n  persons\n    .map(person => `${person.surname} ${person.name} ${person.patron}`)\n    .join();\nconst toponymsFormatter = toponyms =>\n  toponyms.map(toponym => toponym.name).join();\n\nconst startDateSorter = (a, b) => a.startDate - b.startDate;\n\nconst endDateSorter = (a, b) => a.endDate - b.endDate;\n\nconst EditorTable = ({ onAdd, onSelect, deleteRow }) => {\n  const [filter, setFilter] = useState('');\n  const eventTypes = useSelector(eventTypesSelector);\n  const persons = useSelector(personsSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const events = useSelector(eventsSelector);\n\n  const eventsWithNestedData = useMemo(\n    () =>\n      events\n        .map(event => ({\n          ...event,\n          type: eventTypes.find(type => type.id === event.type),\n          persons: event.persons\n            ? event.persons.map(personId =>\n                persons.find(person => person.id === personId),\n              )\n            : [],\n          toponyms: event.toponyms\n            ? event.toponyms.map(toponymId =>\n                toponyms.find(toponym => toponym.id === toponymId),\n              )\n            : [],\n        }))\n        .filter(it => it.name.toLowerCase().includes(filter.toLowerCase())),\n    [events, eventTypes, persons, toponyms, filter],\n  );\n\n  const onRow = useCallback(\n    record => ({\n      onClick: onSelect ? () => onSelect(record) : undefined,\n    }),\n    [onSelect],\n  );\n\n  const onSearch = useCallback(\n    debounce(value => setFilter(value)),\n    [],\n  );\n\n  const renderDeleteButton = (_, record) => (\n    <Popconfirm\n      title=\"Вы уверены?\"\n      onConfirm={event => {\n        event.stopPropagation();\n        deleteRow(record);\n      }}\n      onCancel={event => {\n        event.stopPropagation();\n      }}\n      okText=\"Да\"\n      cancelText=\"Нет\"\n    >\n      <Button\n        type=\"link\"\n        onClick={event => {\n          event.stopPropagation();\n        }}\n      >\n        Удалить\n      </Button>\n    </Popconfirm>\n  );\n\n  return (\n    <div>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          padding: '10px 20px',\n        }}\n      >\n        <Button type=\"primary\" onClick={onAdd}>\n          Добавить\n        </Button>\n        <Input.Search\n          placeholder=\"Введите значение для поиска\"\n          onSearch={onSearch}\n          style={{ width: 400 }}\n        />\n      </div>\n      <Table\n        dataSource={eventsWithNestedData}\n        rowKey={event => event.id}\n        onRow={onRow}\n      >\n        <Table.Column title=\"Название\" dataIndex=\"name\" width=\"35%\" />\n        <Table.Column\n          title=\"Дата начала\"\n          dataIndex=\"startDate\"\n          width=\"10%\"\n          sorter={startDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Дата окончания\"\n          dataIndex=\"endDate\"\n          width=\"10%\"\n          sorter={endDateSorter}\n          render={dateFormatter}\n        />\n        <Table.Column\n          title=\"Тип\"\n          dataIndex=\"type\"\n          width=\"10%\"\n          filters={eventTypes.map(eventType => ({\n            value: eventType.id,\n            text: eventType.type,\n          }))}\n          onFilter={(value, record) => record.type.id === value}\n          render={typeFormatter}\n        />\n        <Table.Column\n          title=\"Действующие лица\"\n          dataIndex=\"persons\"\n          width=\"15%\"\n          render={personsFormatter}\n        />\n        <Table.Column\n          title=\"Топонимы\"\n          dataIndex=\"toponyms\"\n          width=\"15%\"\n          render={toponymsFormatter}\n        />\n        <Table.Column title=\"\" key=\"delete\" render={renderDeleteButton} />\n      </Table>\n    </div>\n  );\n};\n\nexport default EditorTable;\n","import React from 'react';\nimport { Select } from 'antd';\n\nconst ID_FACTORY = it => it.id;\n\nconst NAME_FACTORY = it => it.name;\n\nconst OPTIONS_DEFAULT_VALUE = [];\n\nconst SelectBox = ({\n  options = OPTIONS_DEFAULT_VALUE,\n  optionKeyFactory = ID_FACTORY,\n  optionValueFactory = NAME_FACTORY,\n  optionNameFactory = OPTIONS_DEFAULT_VALUE,\n  ...otherProps\n}) => (\n  <Select {...otherProps}>\n    {options.map(option => (\n      <Select.Option\n        key={optionKeyFactory(option)}\n        value={optionValueFactory(option)}\n      >\n        {optionNameFactory(option)}\n      </Select.Option>\n    ))}\n  </Select>\n);\nexport default SelectBox;\n","import React, { forwardRef, useCallback, useMemo, useState } from 'react';\nimport { debounce, uniq } from 'lodash-es';\nimport { Select } from 'antd';\n\nconst idSelector = option => option.id;\nconst DEFAULT_NAME_SELECTOR = option => option.name;\nconst DEFAULT_VALUE = [];\n\nconst LazySelectSearch = forwardRef(\n  (\n    {\n      allOptions,\n      value = DEFAULT_VALUE,\n      onChange,\n      placeholder,\n      count = 5,\n      keySelector = idSelector,\n      valueSelector = idSelector,\n      nameSelector = DEFAULT_NAME_SELECTOR,\n    },\n    ref,\n  ) => {\n    const [filteredOptions, setFilteredOptions] = useState([]);\n    const onSearch = useCallback(\n      debounce(inputValue => {\n        setFilteredOptions(\n          allOptions.filter(option =>\n            nameSelector(option)\n              .toLowerCase()\n              .includes(inputValue.toLocaleLowerCase()),\n          ),\n        );\n      }, 300),\n      [allOptions],\n    );\n\n    const onBlur = useCallback(() => {\n      setFilteredOptions([]);\n    }, []);\n\n    const onChangeHandler = useCallback(\n      newValue => {\n        setFilteredOptions([]);\n        onChange(newValue);\n      },\n      [onChange],\n    );\n\n    const mappedValues = useMemo(\n      () => value.map(v => allOptions.find(p => valueSelector(p) === v)),\n      [allOptions, value, valueSelector],\n    );\n\n    const options = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.slice(0, count)\n          : uniq([...allOptions.slice(0, count), ...mappedValues]),\n      [allOptions, count, filteredOptions, mappedValues],\n    );\n    const hidedOptionsCount = useMemo(\n      () =>\n        filteredOptions.length\n          ? filteredOptions.length - count\n          : allOptions.length - options.length,\n      [allOptions, count, filteredOptions, options.length],\n    );\n\n    return (\n      <Select\n        ref={ref}\n        placeholder={placeholder}\n        mode=\"multiple\"\n        filterOption={false}\n        onSearch={onSearch}\n        onChange={onChangeHandler}\n        onBlur={onBlur}\n        value={value}\n      >\n        {options.map(option => (\n          <Select.Option\n            key={keySelector(option)}\n            value={valueSelector(option)}\n          >\n            {nameSelector(option)}\n          </Select.Option>\n        ))}\n        {hidedOptionsCount > 0 && (\n          <Select.Option\n            key=\"__hidedOptionsCount__\"\n            value=\"__hidedOptionsCount__\"\n            disabled\n          >\n            Еще {hidedOptionsCount} вариантов\n          </Select.Option>\n        )}\n      </Select>\n    );\n  },\n);\n\nexport default LazySelectSearch;\n","import React from 'react';\nimport { identity } from 'lodash-es';\nimport { Field } from 'react-final-form';\nimport { DatePicker, Form, Input } from 'antd';\nimport SelectBox from './SelectBox';\nimport LazySelectSearch from './LazySelectSearch';\n\nconst wrapInToField = Component => ({\n  name,\n  label,\n  allowNull = true,\n  format = identity,\n  parse = identity,\n  ...otherProps\n}) => (\n  <Field name={name} allowNull={allowNull} format={format} parse={parse}>\n    {({ input: { value, onChange }, meta: { invalid, touched, error } }) => (\n      <Form.Item\n        label={label}\n        validateStatus={touched && invalid ? 'error' : 'success'}\n        help={error}\n      >\n        <Component value={value} onChange={onChange} {...otherProps} />\n      </Form.Item>\n    )}\n  </Field>\n);\n\nconst WrappedInput = wrapInToField(Input);\n\nconst WrappedTextArea = wrapInToField(Input.TextArea);\n\nconst WrappedDateBox = wrapInToField(DatePicker);\n\nconst WrappedSelectBox = wrapInToField(SelectBox);\n\nconst WrappedLazySelectSearch = wrapInToField(LazySelectSearch);\n\nexport {\n  WrappedInput as Input,\n  WrappedTextArea as TextArea,\n  WrappedDateBox as DateBox,\n  WrappedSelectBox as SelectBox,\n  WrappedLazySelectSearch as LazySelectSearch,\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form as FinalForm } from 'react-final-form';\nimport { Button, Drawer, Form, Row } from 'antd';\nimport { DateBox, LazySelectSearch, SelectBox, TextArea } from 'components';\nimport {\n  eventTypesSelector,\n  personsSelector,\n  toponymsSelector,\n} from 'selectors';\n\nconst dateFormat = 'DD.MM.YYYY';\n\nconst EventForm = ({ event, onSubmit, visible, onClose, title }) => {\n  const eventTypes = useSelector(eventTypesSelector);\n  const toponyms = useSelector(toponymsSelector);\n  const persons = useSelector(personsSelector);\n\n  return (\n    <Drawer\n      title={title}\n      visible={visible}\n      onClose={onClose}\n      placement=\"right\"\n      width={450}\n      closable\n      destroyOnClose\n    >\n      <FinalForm\n        initialValues={event}\n        onSubmit={values => {\n          onSubmit({ id: event ? event.id : null, ...values });\n        }}\n      >\n        {({ handleSubmit }) => (\n          <Form layout=\"vertical\" onSubmit={handleSubmit}>\n            <Row>\n              <TextArea\n                name=\"name\"\n                label=\"Название\"\n                rows={4}\n                placeholder=\"Название\"\n              />\n            </Row>\n            <Row>\n              <DateBox\n                name=\"startDate\"\n                label=\"Дата начала\"\n                format={dateFormat}\n              />\n            </Row>\n            <Row>\n              <DateBox\n                name=\"endDate\"\n                label=\"Дата окончания\"\n                format={dateFormat}\n              />\n            </Row>\n            <Row>\n              <SelectBox name=\"type\" label=\"Тип\" options={eventTypes} />\n            </Row>\n            <Row>\n              <LazySelectSearch\n                name=\"toponyms\"\n                label=\"Топонимы\"\n                allOptions={toponyms}\n                placeholder=\"Выберите топонимы\"\n              />\n            </Row>\n            <Row>\n              <LazySelectSearch\n                name=\"persons\"\n                label=\"Действующие лица\"\n                allOptions={persons}\n                nameSelector={p => `${p.surname} ${p.name} ${p.patron}`}\n                placeholder=\"Выберите действующих лиц\"\n              />\n            </Row>\n            <div\n              style={{\n                position: 'absolute',\n                right: 0,\n                bottom: 0,\n                width: '100%',\n                borderTop: '1px solid #e9e9e9',\n                padding: '10px 16px',\n                background: '#fff',\n                textAlign: 'right',\n              }}\n            >\n              <Button htmlType=\"submit\" type=\"primary\">\n                Сохранить\n              </Button>\n            </div>\n          </Form>\n        )}\n      </FinalForm>\n    </Drawer>\n  );\n};\n\nexport default EventForm;\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Layout, PageHeader } from 'antd';\nimport moment from 'moment';\nimport { addEvent, deleteEvent, editEvent } from 'ducks';\nimport DownloadButton from './DownloadButton';\nimport EditorTable from './EditorTable';\nimport EventForm from './EventForm';\n\nconst DataEditorPage = () => {\n  const dispatch = useDispatch();\n  const [isAddFormVisible, setAddFormVisible] = useState(false);\n  const [event, setEvent] = useState(null);\n  const onSelect = useCallback(\n    value =>\n      setEvent({\n        ...value,\n        startDate: moment(value.startDate),\n        endDate: moment(value.endDate),\n        type: value.type.id,\n        toponyms: value.toponyms.map(toponym => toponym.id),\n        persons: value.persons.map(person => person.id),\n      }),\n    [],\n  );\n\n  const closeForm = useCallback(() => {\n    if (isAddFormVisible) {\n      setAddFormVisible(false);\n    } else {\n      setEvent(null);\n    }\n  }, [isAddFormVisible]);\n\n  const changeEvent = useCallback(\n    value => {\n      dispatch(\n        editEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n    },\n    [dispatch, closeForm],\n  );\n\n  const onDelete = useCallback(\n    value => {\n      dispatch(deleteEvent(value));\n    },\n    [dispatch],\n  );\n\n  const createEvent = useCallback(\n    value => {\n      dispatch(\n        addEvent({\n          ...value,\n          endDate: value.endDate.toDate(),\n          startDate: value.startDate.toDate(),\n        }),\n      );\n      closeForm();\n    },\n    [closeForm, dispatch],\n  );\n\n  const showAddForm = useCallback(() => {\n    setAddFormVisible(true);\n  }, []);\n\n  return (\n    <Layout>\n      <PageHeader\n        ghost={false}\n        title=\"Редактирование данных\"\n        extra={<DownloadButton />}\n      />\n      <Layout.Content>\n        <EditorTable\n          onAdd={showAddForm}\n          onSelect={onSelect}\n          deleteRow={onDelete}\n        />\n        <EventForm\n          event={event}\n          visible={event !== null || isAddFormVisible}\n          onClose={closeForm}\n          onSubmit={isAddFormVisible ? createEvent : changeEvent}\n          title={\n            isAddFormVisible ? 'Добавление события' : 'Редактирование события'\n          }\n        />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default DataEditorPage;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Icon, Layout, Menu } from 'antd';\nimport { loadEvents } from '../ducks';\nimport DataViewPage from './DataViewPage';\nimport DataEditorPage from './DataEditorPage';\nimport { editorDataPage, viewDataPage } from './routes';\n\nconst ROUTES = [viewDataPage, editorDataPage];\n\nconst FULL_SIDER_WIDTH = 240;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(true);\n  const dispatch = useDispatch();\n  const { pathname } = useLocation();\n\n  const selectedMenuKeys = useMemo(\n    () => [ROUTES.find(route => route === pathname)],\n    [pathname],\n  );\n\n  useEffect(() => {\n    dispatch(loadEvents());\n  }, [dispatch]);\n\n  return (\n    <Layout style={{ minHeight: '100vh' }} hasSider>\n      <Layout.Sider\n        theme=\"dark\"\n        collapsible\n        width={FULL_SIDER_WIDTH}\n        collapsed={collapsed}\n        onCollapse={setCollapsed}\n        style={{\n          overflow: 'auto',\n          height: '100vh',\n          position: 'fixed',\n          left: 0,\n        }}\n      >\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={selectedMenuKeys}>\n          <Menu.Item key={viewDataPage}>\n            <Link to={viewDataPage}>\n              <Icon type=\"pie-chart\" />\n              <span>Просмотр данных</span>\n            </Link>\n          </Menu.Item>\n          <Menu.Item key={editorDataPage}>\n            <Link to={editorDataPage}>\n              <Icon type=\"edit\" />\n              <span>Редактирование данных</span>\n            </Link>\n          </Menu.Item>\n        </Menu>\n      </Layout.Sider>\n      <Layout\n        style={{\n          marginLeft: collapsed ? 80 : FULL_SIDER_WIDTH,\n          transition: 'margin 0.2s',\n        }}\n      >\n        <Layout.Content>\n          <Switch>\n            <Route path={viewDataPage} component={DataViewPage} />\n            <Route path={editorDataPage} component={DataEditorPage} />\n            <Redirect to={viewDataPage} />\n          </Switch>\n        </Layout.Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","export const viewDataPage = '/view';\nexport const editorDataPage = '/editor';\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport store from './store';\nimport App from './App/App';\nimport './index.css';\n\nconst renderApp = () => (\n  <Router>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </Router>\n);\n\nReactDOM.render(renderApp(), document.getElementById('root'));\n"],"sourceRoot":""}